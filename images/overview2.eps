%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 1897.000000 562.000000
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.14.3 (Build 18D109) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 1897 562
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 1897 562
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: Helvetica
%!FontType1-1.0: Helvetica 1.0000.0.0000
14 dict begin/FontName /Helvetica def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /s put
dup 34 /c put
dup 35 /r put
dup 36 /e put
dup 37 /n put
dup 38 /L put
dup 39 /R put
dup 40 /E put
dup 41 /x put
dup 42 /t put
dup 43 /m put
dup 44 /space put
dup 45 /P put
dup 46 /o put
dup 47 /i put
dup 48 /d put
dup 49 /C put
dup 50 /u put
dup 51 /a put
dup 52 /b put
dup 53 /period put
dup 54 /p put
dup 55 /g put
dup 56 /l put
dup 57 /hyphen put
dup 58 /S put
dup 59 /y put
dup 60 /T put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -1947 1 index div -985 2 index div 2961 3 index div 2297 5 -1 roll div]cvx def
/sfnts [<


20457D691844B001602DB800322CB800312A2DB800332C4B20B003265358B0801BB040598A8A20B0032653582321B0C08A8A1B8A235920B0032653582321B801008A8A1B8A235920B0032653582321B801408A8A1B8A235920B80003265358B0032545B8018050582321B8018023211BB003254523212321591B2159442DB800342C4B535845441B2121592DB800352C4BB800095058B101018E59B801FF85B800441DB9000900035F5E2DB800362C2020456944B001602DB800372CB800362A212DB800382C2046B003254652582359208A208A49648A204620686164B004254620686164525823658A592F20B00053586920B000545821B040591B6920B000545821B0406559593A2DB800392C2046B00425465258238A592046206A6164B0042546206A61645258238A592FFD2DB8003A2C4B20B0032650585158B080441BB04044591B21212045B0C05058B0C0441B2159592DB8003B2C2020456944B001602020457D691844B001602DB8003C2CB8003B2A2DB8003D2C4B20B003265358B0801BB040598A8A20B0032653582321B0C08A8A1B8A235920B0032653582321B801008A8A1B8A235920B0032653582321B801408A8A1B8A235920B80003265358B0032545B8018050582321B8018023211BB003254523212321591B2159442DB8003E2C4B535845441B2121592DB8003F2C4BB800095058B101018E59B801FF85B800441DB9000900035F5E2DB800402C2020456944B001602DB800412CB800402A212DB800422C2046B003254652582359208A208A49648A204620686164B004254620686164525823658A592F20B00053586920B000545821B040591B6920B000545821B0406559593A2DB800432C2046B00425465258238A592046206A6164B0042546206A61645258238A592FFD2DB800442C4B20B0032650585158B080441BB04044591B21212045B0C05058B0C0441B2159592DB800452C2020456944B001602020457D691844B001602DB800462CB800452A2DB800472C4B20B003265358B0801BB040598A8A20B0032653582321B0C08A8A1B8A235920B0032653582321B801008A8A1B8A235920B0032653582321B801408A8A1B8A235920B80003265358B0032545B8018050582321B8018023211BB003254523212321591B2159442DB800482C4B535845441B2121592DB800492C4BB800095058B101018E59B801FF85B800441DB9000900035F5E2DB8004A2C2020456944B001602DB8004B2CB8004A2A212DB8004C2C2046B003254652582359208A208A49648A204620686164B004254620686164525823658A592F20B00053586920B000545821B040591B6920B000545821B0406559593A2DB8004D2C2046B00425465258238A592046206A6164B0042546206A61645258238A592FFD2DB8004E2C4B20B0032650585158






DB0192FE6E02250000020015FE4903E804490018001900CA406E8A158818A71803070617063812481258126707770377078C1498009705981597169717A800A8161048004B154717C915044405C605028705A600A601A705A8170524280518151716010006150C0B0F1D080E19071919161B17171A050001AF171518AF0C8F16191A1BD421677E182B2B194EF44DE418FD3939FD3939194E456544E61812392F003F3F4DFD3932192F183F3C3C3C123939014B5279401215150016166D121717180501016D12000018872E2B107DC418872E2B10087DC418015D71313071015D005D013306030207020623222627351E01333236373E0137013301030321C7268362429C809C26291E2F2A10322F10053E0EFE74CC011F01042F67FE91FEECAEFE66B40608A40D062118089424044EFC980382000002002F0000044205930007000B00001335211521112311013521152F0413FE4FB2FE50041303A6A8A8FC5A03A60146A7A7000000010000000000004E8ABC9E5F0F3CF500110800000000005F4D8F0000000000D7C5A882F865FC270B9108F9000000090001000000000000000100000629FE2900000C01F865FCED0B9100010000000000000000000000000000001E051200420239000002AA0055023900AF05C7005A055600AF0473009C055600AF05C700B40556006004E3002104730052047300760400003B04730038047300480473003D01C7008401C7008906AA0084047300840473003B0473007602AA00890400004202390017047300800400000B040000150473002F0000003600360054007401040148017001C60250031C034A0414047E0500056C063606DE070C072E07AA0806087E08F009360A160A660AC00AF00B860BA0000000010000001E00920009006B0007000200100010005D000007E80A1D00040001B800532BB800492BB8003F2BB800352BB8002B2B4118008001A6009001A600A001A600030069018B0079018B0089018B0099018B00040089018B0099018B00A9018B00B9018BB2040840BA0179001A014A400B041F5414191F180A0B1FD2B80106B49E1FD918E3BB0119000D00E10119B20D0009410A01A0019F0064001F01A50025017A00480028019AB3296C1F60410A01A9007001A9008001A90003008001A9000101A9B21E321FBE012C00250401001F0126001E0401B61FE7312D1FE531B80201B21FC227B80401B21FC11EB80201400F1FC01D9E1FBF1D671FBE1D671FAB27B80401B21FAA29B80401B61FA91D6C1F931EB8019AB21F921DB80101B21F911DB80101B21F751DB80201B61F6D29961F6431B8019AB21F4C96B802ABB21F391DB80156400B1F3638211F351DE41F2F27B80801400B1F2D1D4C1F2A31CD1F241DB802ABB21F201EB8012540111F1C1D931F3A1D4C1F1E1D45273A1D4527BB01AA019B

00>] def
/CharStrings 30 dict dup begin
/.notdef 0 def
/space 1 def
/hyphen 2 def
/period 3 def
/C 4 def
/E 5 def
/L 6 def
/P 7 def
/R 8 def
/S 9 def
/T 10 def
/a 11 def
/b 12 def
/c 13 def
/d 14 def
/e 15 def
/g 16 def
/i 17 def
/l 18 def
/m 19 def
/n 20 def
/o 21 def
/p 22 def
/r 23 def
/s 24 def
/t 25 def
/u 26 def
/x 27 def
/y 28 def
/u20B8 29 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] def
/FontBBox{-1947 -985 2961 2297}def
/UniqueID 4179358 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C9311B6521168F61DA8AF511CECA1903976E43EB7D7A7D6F1C6A6D8D64C4DAF1EF7B00E94B71A4303D4707C6C756FBDB02B638BD6B72BB363CB4796A99DD5654BD5CA27B4C6E69132301CDB2C2B3549849CF3E03C0A5837EFFD4D216E5BA5090D21921DF2C86227FA290B2A58A4D4693B3FAE721B11BD340EC8413283499E28439F0ECD124EA790F08EC06C8C1C84BAE121E2D9E91CDE317838383BB9BE1379F27ED41BA4709F53977E473946F6D86229C79360D47F845E64A92C779D2C21C8D871ED212AAD28DBBE8160F351BC76CABBBF6BBB7437312F0479CBB73F50F59498A42E1EB21E7A6EF465395275564A92CBB158FE679AFBFBA97B6352F2FAFDECFECF5267047C36368426806B5ABBE14946291AC483ECF8F62B0E4A1D7F2BF58BCC563A8F74DA3A9D74D33E205AE190A4D2487DD686BCFDC86929BDA8D6275224825EC2DCBCD24A8A86525A2A98244CB651E5ECB2A296B224133178988FA842BA1076BE5C016BA3DF75B870E3A38D7F38022EF67D1B6B545235AEA7B296FD9031C4AFF4026E259E3B5DBF8BBA74CE27DA522D09C41812FBF372DC25AB99820C2566C3866E68BBDC6584286EAF1A8C81D534CCA319D45B2C5F2CDF70613696BD834736042696CC88B3427D8E37A821AA39C3053F38355D830B912C9F7E4DA2C22CA9FEBB2AE187A4078D2AAADF92EF5A1AF898358C682585C214DE341E5EF0ECA32C7A418751BCF980C11A85309D30914D9F0560228B5E40F91C711401580457BD9BA0


F6C998EB8C4C1AEF247A0CB693CE3ACE391BF1430276FC4870E74AB50C8360E65007BD441BF4BFC53CA5DC045ED38BA3B38715872324D6586B26F9A85957E6567DC262B2821C28539AEC0CE37A5C33AF50D417D462C52E72D8FF9154F79CE45215CCA65EB325BEC50ACBAD2404ADE622FD02375B9C238FB8B483BBF91932F23DC271A4D13FEF87831A41D8F83D54A3E1D635997E5D3327EBC020B94232B8086A8A29B05514220F7BF95890224D8C662A0F7C52227484C690957563CC1A73FD5D5441B4D8B2F52CF17C0D7F2E636C15E012D000549533F3A141816B21E28FDC093B7289A8D4DC9FB1BFA7F721C8860DEE664C25EF5B00A48576F7CD25D6D1712EA047EEDAA05DB7F261F2ECCA2B2C673113024059415A9C5BBAD65B9D4FD3DB5B1A06A8C59F9C6CC60DACAD54ECA851CA5E5E67EFC226642771C09144072BA445A33CABEA2C6657880F8DF1625CF92D2E3D1B6B3A94A077FF6495A867E984234328732F17F627C444637DBD4DA11641394D2EAD66DD28258C6DB3488A6E74857EE4BE0E72E1D6579222C72EF68419EAC9D661E72CD137F8319467E4AAC8E40D395471B268220A58ED0827DADA1493A9A13DD8D84A8A5CA58979987A297DAF8EB05B794B16256104372EF73FBF3478416D425802B74E9387E55E227E41F1C0094DCE66692F84FA1FA0527DFBFD56FEE5852C682E8B6A150BE0D01291B9185B3A93C704B7AEA0B574B380DEDC42DDCCC1F89F8460B247AA18C99E3FFE29A612B57D5D224613A6AD70C34D82271284DE81531F1382D2587F1C52AAD30F6663CAF15EC5C319ED8ACF420D27A214B3A72AC07405C2AA9B8A13EB13DFEF5F469F6C5227D2A96FF76856AD43A8335ED1AAA315DB95614597C6AABE10242AD1BBA20AD1E984BDE6A8A13BC7232B61412F5E91CBB5E71762535A8120D46E0C505417F14FB30F12BC444C0CBCE1E41BCF0DD573802E10F13037215DB73904244C0FEF24E0C2193FA5AFCCA6D901956D4C540E9A8B21D5F5214D71D8E5AE58F43C7612A7ECB4AA5F10C6299A68849EE2903351FEA07C73CA7FC54204A26B1EF1C7F8C3068F79E35158DC52BC4873B7F387F0183EA1DAB286A6DCC83634A69C260981F9AA67EF5C05A959C322F1CA699AE7EF3658B2382FD465216956E3022686BAA4C02D341F245A4C82FA7AD6726EF2F2624678D1637B204C8CE5C05182E4331DD325BEAD565FB7F684F1C229F15A06A6AEB0B6BE83779E35926BB4AF09FA82540703E24F74A2209D66763AE8F11A54500D73460011B39853C3EC0E806850DB08F7C1B072D42B814B5A35F8F09E952597BA82BAAE89C7196A1EF1B2A44030B3A406BB417727606793DA48D28CDD91D3288B39DFF93949388A836E48363C402BDA9DE368917B613C73D4E5D3D765FCA4B30F96934AA989901551E7392447CABB3EDA64439FBE
C6411B680026143180836EBB1E72A6B92F746FB0F90953E0829EC3F1CD00DCBD887BB4929F04FD4F15FFB12B6C41B7E0D1FD6E3592D344AF1C1EB4F7D7DAA32452122E3C065CD38705F6F2166D7A1B060D30C3420616603F4CE25E1569BC68405F6A00432D6DE6CEC049EA5C2BEDE125A49F1A9B0B3F999DBF486DA4FB4AEB4A056161776F1814E1EDFEB696FA2DC805585687F07B17D18D6C3C7D74E9053263FC719C2BF47D6EA124C12AE3DF4505F4A3FA4C882077B2797891A6931A85B5ED686B79FA7B6284FE5067ED0B4479A68C52E5859E670B93561521080C271955E3D03ABCE396DFFE4AE04C0187855879CA761DF9D0C716B5FA96ACEF8145EF6DC0D41B90B89939B5B78ACA18C4E069FE93E669E35AA329A73CB179C99DED5DA1E431870207FB6596752C14A5F8940F469055FFD1600ECE563E02832CC3E648665B21E690F50D2852247C8D06922F8FA940B93421F256CE37F0441F8095E1A3481AD60771C65113C67D238D4082466CE2D6ECF9EF0A8EB47B495016863825E0192591A70A
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/Helvetica cguidfix
/F1.1/Helvetica renmfont
%RBIBeginFontSubset: Verdana
%!FontType1-1.0: Verdana 1.0000.5.0100
/FontInfo 1 dict dup begin
/FSType 8 def
end readonly def
14 dict begin/FontName /Verdana def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /I put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -1013 1 index div -621 2 index div 2963 3 index div 2049 5 -1 roll div]cvx def
/sfnts [<



00>] def
/CharStrings 5 dict dup begin
/.notdef 0 def
/I 1 def
/grave 2 def
/afii10074 3 def
/uni045D 4 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontInfo 1 dict dup begin
/FSType 8 def
end readonly def
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] def
/FontBBox{-1013 -621 2963 2049}def
/UniqueID 4044246 def
currentdict currentfile eexec

0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/Verdana cguidfix
/F2.1/Verdana renmfont
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
 exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs2 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
1 sc
q
0 0 1897 562 rc
0 562 m
1897 562 l
1897 0 l
0 0 l
h
f
/Cs2 SC
1 1 1 sc
-1753.6586 2252.2439 m
3648.7805 2252.2439 l
3648.7805 -2818.4878 l
-1753.6586 -2818.4878 l
h
-1753.6586 2252.2439 m
f
3 w
1 J
1 j
[
12
12
] 0 d
0.60000002 i
0.64705902 0.64705902 0.64705902 sc
1 0 0 -1 327 796 cm
504.93243 653.67572 m
522.21259 704.23511 l
S
0 i
CM
846.80017 89.640343 m
847.82178 91.722855 850.3382 92.582901 852.42065 91.56131 c
854.50317 90.539719 855.36322 88.023331 854.34167 85.940826 c
853.32007 83.858307 850.80365 82.99826 848.72119 84.019859 c
846.63867 85.041451 845.77863 87.557831 846.80017 89.640343 c
f
0 J
0 j
[] 0 d
1 0 0 -1 327 796 cm
519.80017 706.35968 m
520.82178 704.27716 523.3382 703.41711 525.42065 704.43866 c
527.50317 705.46027 528.36322 707.97668 527.34167 710.0592 c
526.32007 712.14166 523.80365 713.00171 521.72119 711.98016 c
519.63867 710.95856 518.77863 708.44214 519.80017 706.35968 c
S
CM
834.34479 144.44882 m
833.32324 142.36632 830.80682 141.50627 828.7243 142.52786 c
826.64185 143.54945 825.7818 146.06584 826.80334 148.14835 c
827.82495 150.23087 830.34131 151.09091 832.42383 150.06932 c
834.50635 149.04773 835.36639 146.53134 834.34479 144.44882 c
f
1 0 0 -1 327 796 cm
507.34482 651.55115 m
506.32321 653.63367 503.80685 654.49371 501.72433 653.47217 c
499.64182 652.45056 498.78177 649.93414 499.80338 647.85162 c
500.82495 645.76917 503.34134 644.90912 505.42386 645.93066 c
507.50635 646.95227 508.36639 649.46869 507.34482 651.55115 c
S
1 1 1 sc
CM
474.17386 505.60309 m
895.27539 505.60309 l
895.27539 38.396912 l
474.17386 38.396912 l
h
474.17386 505.60309 m
f
2 w
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 327 796 cm
147.17386 290.39691 m
568.27539 290.39691 l
568.27539 757.60309 l
147.17386 757.60309 l
h
147.17386 290.39691 m
S
0 i
1 1 1 sc
CM
641.56396 404.40927 m
611.5351 408.6712 579.95575 399.13965 556.86176 375.81458 c
517.80914 336.37164 517.80914 272.42209 556.86176 232.97916 c
595.91412 193.53603 659.23053 193.53603 698.28296 232.97916 c
705.31519 240.08168 711.08112 247.97884 715.58075 256.38446 c
745.60962 252.12251 777.1889 261.65408 800.28296 284.97916 c
839.33557 324.42209 839.33557 388.37164 800.28296 427.81458 c
761.23053 467.25769 697.91412 467.25769 658.86176 427.81458 c
651.82953 420.71204 646.0636 412.81488 641.56396 404.40927 c
h
641.56396 404.40927 m
f
3 w
0.60000002 i
0 0 0 sc
1 0 0 -1 327 796 cm
314.56393 391.59073 m
284.53506 387.3288 252.95578 396.86035 229.86176 420.18542 c
190.80916 459.62836 190.80916 523.57794 229.86176 563.02087 c
268.91415 602.46399 332.23056 602.46399 371.28296 563.02087 c
378.31519 555.91833 384.08112 548.02118 388.58075 539.61554 c
418.60962 543.8775 450.18893 534.34595 473.28296 511.02084 c
512.33557 471.57791 512.33557 407.62836 473.28296 368.18542 c
434.23056 328.74231 370.91415 328.74231 331.86176 368.18542 c
324.82953 375.28796 319.06357 383.18512 314.56393 391.59073 c
h
314.56393 391.59073 m
S
0 i
1 1 1 sc
CM
699.16083 291.80927 m
753.43158 291.80927 l
753.43158 237.39691 l
699.16083 237.39691 l
h
699.16083 291.80927 m
f
621.17389 448.39691 m
675.44458 448.39691 l
675.44458 391.19263 l
621.17389 391.19263 l
h
621.17389 448.39691 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 327 796 cm
294.17386 390.60309 m
294.17386 390.60309 302.55835 390.81467 314.17386 393.60309 c
325.78937 396.39151 329.79108 405.82837 335.17386 400.44559 c
340.55667 395.06277 329.41422 387.59048 333.17386 374.60309 c
336.93353 361.61569 348.44458 354.60309 348.44458 354.60309 c
S
374.27539 559.60309 m
374.27539 559.60309 377.93619 558.65198 380.17386 547.60309 c
382.41156 536.5542 374.33371 523.65747 382.17386 520.60309 c
390.01401 517.54871 395.3093 531.95917 407.84772 536.82184 c
420.38617 541.68451 426.43158 537.76715 426.43158 537.76715 c
S
164.07236 656.59918 m
539.07233 654.60309 l
S
4 w
0.89803898 0.49019599 0.17254899 sc
164.17386 712.60309 m
539.07233 709.01349 l
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 527.12311 124.39691 cm
/F1.1[ 20 0 0 -20 0 0]sf
-30.014648 7 m
(!"#$$%)[ 10.000000 10.000000 6.660156 11.123047 11.123047 0.000000 ] xS
1 0 0 -1 497.22461 65.396912 cm
-5.5615234 7 m
(&)s
1 0 0 -1 858.22461 65.396912 cm
-7.2216797 7 m
(')s
1 0 0 -1 684.72461 480.39691 cm
-67.802734 7 m
(\(\)*#$+$,-./%*!)[ 13.339844 10.000000 5.556641 6.660156 11.123047 16.660156 11.123047 5.556641 13.339844 11.123047 4.443359 11.123047 5.556641 0.000000 ] xS
3 w
[
12
12
] 0 d
0.60000002 i
/Cs2 SC
0.64705902 0.64705902 0.64705902 sc
1 0 0 -1 327 796 cm
378.25095 545.27026 m
171.01054 705.65295 l
S
0 i
CM
495.22006 91.942856 m
497.52106 91.649567 499.14859 89.546501 498.85532 87.245522 c
498.56204 84.94455 496.45895 83.316986 494.15799 83.610268 c
491.85699 83.903557 490.22946 86.006622 490.52274 88.307602 c
490.81601 90.608574 492.9191 92.236137 495.22006 91.942856 c
f
0 J
0 j
[] 0 d
1 0 0 -1 327 796 cm
168.22006 704.05713 m
170.52104 704.35046 172.14861 706.45349 171.85532 708.75446 c
171.56203 711.05548 169.45895 712.68304 167.15799 712.38971 c
164.85701 712.09644 163.22945 709.99335 163.52274 707.69238 c
163.81602 705.39142 165.9191 703.76385 168.22006 704.05713 c
S
CM
708.04144 249.13397 m
705.74042 249.42726 704.11292 251.53033 704.40619 253.8313 c
704.69946 256.13229 706.80255 257.75983 709.10352 257.46655 c
711.40448 257.17328 713.03204 255.07021 712.73877 252.76923 c
712.4455 250.46825 710.34241 248.84068 708.04144 249.13397 c
f
1 0 0 -1 327 796 cm
381.04141 546.86603 m
378.74045 546.57275 377.11288 544.46967 377.40616 542.1687 c
377.69946 539.86774 379.80252 538.24017 382.10352 538.53345 c
384.40448 538.82672 386.03204 540.92981 385.73874 543.23077 c
385.44547 545.53174 383.34241 547.1593 381.04141 546.86603 c
S
1 J
1 j
[
12
12
] 0 d
0.60000002 i
386.24506 546.41888 m
532.35016 704.38391 l
S
0 i
CM
858.00519 88.696411 m
858.09558 91.014244 860.04785 92.819931 862.36566 92.72953 c
864.68353 92.639122 866.4892 90.686852 866.3988 88.369026 c
866.30841 86.051193 864.35614 84.245506 862.03833 84.335915 c
859.72046 84.426315 857.91479 86.378586 858.00519 88.696411 c
f
0 J
0 j
[] 0 d
1 0 0 -1 327 796 cm
531.00519 707.30359 m
531.09558 704.98578 533.04785 703.18005 535.36566 703.27045 c
537.68353 703.3609 539.4892 705.31317 539.3988 707.63098 c
539.30841 709.94879 537.35614 711.75452 535.03833 711.66406 c
532.72046 711.57367 530.91479 709.6214 531.00519 707.30359 c
S
CM
714.59003 252.50076 m
714.49963 250.18294 712.54736 248.37724 710.22955 248.46765 c
707.91168 248.55806 706.10602 250.51031 706.19641 252.82816 c
706.2868 255.14598 708.23907 256.95166 710.55688 256.86127 c
712.87476 256.77087 714.68042 254.81859 714.59003 252.50076 c
f
1 0 0 -1 327 796 cm
387.59003 543.49921 m
387.4996 545.81708 385.54736 547.62274 383.22952 547.53235 c
380.91168 547.44196 379.10599 545.48969 379.19641 543.17188 c
379.2868 540.854 381.23907 539.04834 383.55692 539.13873 c
385.87473 539.22913 387.68042 541.1814 387.59003 543.49921 c
S
/Cs1 SC
0 sc
1 0 0 -1 689.05078 260 cm
-5.5615234 7 m
(0)s
/Cs2 SC
1 1 1 sc
CM
28 505.60309 m
449.1015 505.60309 l
449.1015 38.396912 l
28 38.396912 l
h
28 505.60309 m
f
2 w
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 327 796 cm
-299 290.39691 m
122.10151 290.39691 l
122.10151 757.60309 l
-299 757.60309 l
h
-299 290.39691 m
S
0 i
1 1 1 sc
CM
195.39008 404.40927 m
165.36121 408.6712 133.78191 399.13965 110.68789 375.81458 c
71.635284 336.37164 71.635284 272.42209 110.68789 232.97916 c
149.74028 193.53603 213.05669 193.53603 252.10909 232.97916 c
259.14133 240.08168 264.90726 247.97884 269.40689 256.38446 c
299.43576 252.12251 331.01508 261.65408 354.1091 284.97916 c
393.16168 324.42209 393.16168 388.37164 354.1091 427.81458 c
315.0567 467.25769 251.74028 467.25769 212.68788 427.81458 c
205.65565 420.71204 199.88971 412.81488 195.39008 404.40927 c
h
195.39008 404.40927 m
f
3 w
0.60000002 i
0 0 0 sc
1 0 0 -1 327 796 cm
-131.60992 391.59073 m
-161.63879 387.3288 -193.21809 396.86035 -216.31212 420.18542 c
-255.36472 459.62836 -255.36472 523.57794 -216.31212 563.02087 c
-177.25972 602.46399 -113.94331 602.46399 -74.890915 563.02087 c
-67.858673 555.91833 -62.092739 548.02118 -57.593105 539.61554 c
-27.564234 543.8775 4.0150661 534.34595 27.109087 511.02084 c
66.16169 471.57791 66.16169 407.62836 27.109087 368.18542 c
-11.943313 328.74231 -75.259712 328.74231 -114.31211 368.18542 c
-121.34435 375.28796 -127.11028 383.18512 -131.60992 391.59073 c
h
-131.60992 391.59073 m
S
0 i
1 1 1 sc
CM
252.98698 291.80927 m
307.25772 291.80927 l
307.25772 237.39691 l
252.98698 237.39691 l
h
252.98698 291.80927 m
f
175 448.39691 m
229.27072 448.39691 l
229.27072 391.19263 l
175 391.19263 l
h
175 448.39691 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 327 796 cm
-152 390.60309 m
-152 390.60309 -143.61551 390.81467 -132 393.60309 c
-120.3845 396.39151 -116.3828 405.82837 -111 400.44559 c
-105.6172 395.06277 -116.75967 387.59048 -113 374.60309 c
-109.24033 361.61569 -97.729271 354.60309 -97.729271 354.60309 c
S
-71.898491 559.60309 m
-71.898491 559.60309 -68.237679 558.65198 -66 547.60309 c
-63.762318 536.5542 -71.840141 523.65747 -64 520.60309 c
-56.159855 517.54871 -50.864567 531.95917 -38.326134 536.82184 c
-25.787703 541.68451 -19.742289 537.76715 -19.742289 537.76715 c
S
-282.1015 656.59918 m
92.898491 654.60309 l
S
4 w
0.89803898 0.49019599 0.17254899 sc
-282 712.60309 m
83.164711 710.49133 l
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 80.949242 124.39691 cm
-30.014648 7 m
(!"#$$%)[ 10.000000 10.000000 6.660156 11.123047 11.123047 0.000000 ] xS
1 0 0 -1 51.050755 65.396912 cm
-5.5615234 7 m
(&)s
1 0 0 -1 412.05075 65.396912 cm
-7.2216797 7 m
(')s
3 w
[
12
12
] 0 d
0.60000002 i
/Cs2 SC
0.64705902 0.64705902 0.64705902 sc
1 0 0 -1 327 796 cm
82.532181 703.74634 m
57.322887 434.92819 l
S
0 i
CM
387.16492 362.57388 m
385.685 360.78772 383.03732 360.53943 381.25116 362.01932 c
379.46497 363.49921 379.21667 366.14688 380.69656 367.93304 c
382.17645 369.71924 384.82413 369.96753 386.61032 368.48764 c
388.39648 367.00775 388.64481 364.36008 387.16492 362.57388 c
f
0 J
0 j
[] 0 d
1 0 0 -1 327 796 cm
60.164902 433.42612 m
58.685009 435.21228 56.037334 435.46057 54.251156 433.98068 c
52.464977 432.50079 52.216682 429.85312 53.696575 428.06696 c
55.176468 426.28076 57.824142 426.03247 59.610321 427.51236 c
61.3965 428.99225 61.644794 431.63992 60.164902 433.42612 c
S
CM
406.69016 90.751595 m
408.17004 92.537773 410.81772 92.786064 412.60391 91.306175 c
414.39008 89.826286 414.63837 87.178604 413.15848 85.392426 c
411.67859 83.606247 409.03091 83.357956 407.24475 84.837845 c
405.45856 86.317734 405.21027 88.965416 406.69016 90.751595 c
f
1 0 0 -1 327 796 cm
79.690163 705.24841 m
81.170052 703.46222 83.817726 703.21393 85.603912 704.69385 c
87.390083 706.17371 87.638382 708.82141 86.158493 710.60754 c
84.678596 712.39374 82.030922 712.64203 80.244743 711.16217 c
78.458565 709.68225 78.210274 707.03461 79.690163 705.24841 c
S
1 J
1 j
[
12
12
] 0 d
0.60000002 i
-274.75644 708.27679 m
4.8737206 529.80048 l
S
0 i
CM
334.50848 264.35794 m
332.24344 264.85809 330.81271 267.0997 331.31284 269.36475 c
331.81299 271.62976 334.0546 273.06049 336.31964 272.56036 c
338.58469 272.06021 340.01541 269.8186 339.51526 267.55356 c
339.01514 265.28854 336.7735 263.85779 334.50848 264.35794 c
f
0 J
0 j
[] 0 d
1 0 0 -1 327 796 cm
7.5084748 531.64203 m
5.2434425 531.14191 3.8127122 528.90033 4.3128481 526.63525 c
4.8129869 524.37024 7.0546098 522.93951 9.3196402 523.43964 c
11.584676 523.93976 13.015406 526.1814 12.515266 528.44641 c
12.015128 530.71149 9.7735043 532.14221 7.5084748 531.64203 c
S
CM
49.608814 89.564789 m
51.873844 89.064644 53.304577 86.823029 52.80444 84.557999 c
52.304302 82.292969 50.062679 80.862228 47.797649 81.362366 c
45.532612 81.862511 44.101883 84.104126 44.60202 86.369164 c
45.102161 88.634193 47.343784 90.064926 49.608814 89.564789 c
f
1 0 0 -1 327 796 cm
-277.39117 706.43524 m
-275.12616 706.93536 -273.69543 709.17694 -274.19556 711.44202 c
-274.69571 713.70703 -276.93732 715.13776 -279.20236 714.63763 c
-281.46738 714.13751 -282.89813 711.89587 -282.39798 709.63086 c
-281.89783 707.36578 -279.65622 705.93506 -277.39117 706.43524 c
S
1 J
1 j
[
12
12
] 0 d
0.60000002 i
-98.991005 582.40424 m
-274.8927 706.01978 l
S
0 i
CM
49.393234 91.702789 m
51.678268 91.303894 53.207291 89.128136 52.808399 86.843094 c
52.409504 84.55806 50.233738 83.029037 47.948704 83.427925 c
45.663666 83.82682 44.134644 86.002579 44.533539 88.287621 c
44.932434 90.572655 47.108196 92.101685 49.393234 91.702789 c
f
0 J
0 j
[] 0 d
1 0 0 -1 327 796 cm
-277.60678 704.29724 m
-275.32172 704.69611 -273.79269 706.87189 -274.19159 709.15692 c
-274.59048 711.44196 -276.76627 712.97095 -279.0513 712.57208 c
-281.33633 712.17316 -282.86536 709.99744 -282.46646 707.7124 c
-282.06757 705.42737 -279.89182 703.89832 -277.60678 704.29724 c
S
CM
230.72305 211.87323 m
228.43802 212.27213 226.909 214.44789 227.30789 216.73293 c
227.70679 219.01796 229.88255 220.54698 232.16759 220.14809 c
234.45262 219.74919 235.98164 217.57344 235.58275 215.28841 c
235.18385 213.00337 233.00809 211.47433 230.72305 211.87323 c
f
1 0 0 -1 327 796 cm
-96.276947 584.12677 m
-98.561981 583.72784 -100.091 581.55212 -99.692108 579.26709 c
-99.293221 576.98206 -97.117455 575.453 -94.83242 575.85193 c
-92.547379 576.25079 -91.018356 578.42657 -91.417252 580.71161 c
-91.816147 582.99664 -93.991913 584.52563 -96.276947 584.12677 c
S
/Cs1 SC
0 sc
1 0 0 -1 238.55075 480.39691 cm
-66.147461 7 m
(1.%*.2#,-./%*!)[ 14.443359 11.123047 11.123047 5.556641 11.123047 11.123047 6.660156 5.556641 13.339844 11.123047 4.443359 11.123047 5.556641 0.000000 ] xS
1 0 0 -1 217.72462 229.54929 cm
-5.5615234 7 m
(3)s
1 0 0 -1 334.05075 288.52582 cm
-5.5615234 7 m
(4)s
1 0 0 -1 365.05075 369 cm
-5 7 m
(")s
1 w
1 J
1 j
[
8
5
] 0 d
0.60000002 i
/Cs2 SC
0.5 0.5 0.5 sc
1 0 0 -1 327 796 cm
-326 235 m
589 235 l
589 795 l
-326 795 l
h
-326 235 m
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 458.5 22.205116 cm
/F2.1[ 20 0 0 -20 0 0]sf
-186.52344 7.5 m
(!)s
/F1.1[ 20 0 0 -20 0 0]sf
-178.10547 7.5 m
(5,1.+62*/%7,1.%*.2#,3%0,\(\)*#$+$,-./%*!)[ 5.556641 5.556641 14.443359 11.123047 16.660156 11.123047 11.123047 5.556641 4.443359 11.123047 11.123047 5.556641 14.443359 11.123047 11.123047 5.556641 11.123047 11.123047 6.660156 5.556641 11.123047 11.123047 11.123047 5.556641 13.339844 10.000000 5.556641 6.660156 11.123047 16.660156 11.123047 5.556641 13.339844 11.123047 4.443359 11.123047 5.556641 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
962 505.60309 m
1383.1016 505.60309 l
1383.1016 38.396912 l
962 38.396912 l
h
962 505.60309 m
f
2 w
[] 0 d
0.60000002 i
0 0 0 sc
1 0 0 -1 327 796 cm
635 290.39691 m
1056.1016 290.39691 l
1056.1016 757.60309 l
635 757.60309 l
h
635 290.39691 m
S
0 i
1 1 1 sc
CM
1129.3901 404.40927 m
1099.3612 408.6712 1067.7819 399.13965 1044.6879 375.81458 c
1005.6353 336.37164 1005.6353 272.42209 1044.6879 232.97916 c
1083.7402 193.53603 1147.0566 193.53603 1186.1091 232.97916 c
1193.1414 240.08168 1198.9072 247.97884 1203.4069 256.38446 c
1233.4358 252.12251 1265.015 261.65408 1288.1091 284.97916 c
1327.1617 324.42209 1327.1617 388.37164 1288.1091 427.81458 c
1249.0566 467.25769 1185.7402 467.25769 1146.6879 427.81458 c
1139.6556 420.71204 1133.8898 412.81488 1129.3901 404.40927 c
h
1129.3901 404.40927 m
f
3 w
0.60000002 i
0 0 0 sc
1 0 0 -1 327 796 cm
802.39008 391.59073 m
772.36121 387.3288 740.78192 396.86035 717.68787 420.18542 c
678.63531 459.62836 678.63531 523.57794 717.68787 563.02087 c
756.7403 602.46399 820.0567 602.46399 859.10907 563.02087 c
866.1413 555.91833 871.90729 548.02118 876.40692 539.61554 c
906.43579 543.8775 938.01508 534.34595 961.10907 511.02084 c
1000.1617 471.57791 1000.1617 407.62836 961.10907 368.18542 c
922.0567 328.74231 858.7403 328.74231 819.68787 368.18542 c
812.65564 375.28796 806.88971 383.18512 802.39008 391.59073 c
h
802.39008 391.59073 m
S
0 i
1 1 1 sc
CM
1186.9869 291.80927 m
1241.2577 291.80927 l
1241.2577 237.39691 l
1186.9869 237.39691 l
h
1186.9869 291.80927 m
f
1109 448.39691 m
1163.2708 448.39691 l
1163.2708 391.19263 l
1109 391.19263 l
h
1109 448.39691 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 327 796 cm
782 390.60309 m
782 390.60309 790.38452 390.81467 802 393.60309 c
813.61548 396.39151 817.61719 405.82837 823 400.44559 c
828.38281 395.06277 817.24036 387.59048 821 374.60309 c
824.75964 361.61569 836.27075 354.60309 836.27075 354.60309 c
S
862.1015 559.60309 m
862.1015 559.60309 865.76233 558.65198 868 547.60309 c
870.23767 536.5542 862.15985 523.65747 870 520.60309 c
877.84015 517.54871 883.13544 531.95917 895.67389 536.82184 c
908.21228 541.68451 914.25769 537.76715 914.25769 537.76715 c
S
651.8985 656.59918 m
1026.8984 654.60309 l
S
4 w
0.89803898 0.49019599 0.17254899 sc
652 712.60309 m
1007.9985 712.60309 l
S
0 i
CM
1347.7985 83.396912 m
1334.9985 88.196915 l
1334.9985 78.596909 l
h
1347.7985 83.396912 m
f
0 J
0 j
1 0 0 -1 327 796 cm
1020.7985 712.60309 m
1007.9985 707.8031 l
1007.9985 717.40308 l
h
1020.7985 712.60309 m
S
/Cs1 SC
0 sc
1 0 0 -1 1014.9492 124.39691 cm
-30.014648 7 m
(!"#$$%)[ 10.000000 10.000000 6.660156 11.123047 11.123047 0.000000 ] xS
1 0 0 -1 985.05078 65.396912 cm
-5.5615234 7 m
(&)s
1 0 0 -1 1346.0508 65.396912 cm
-7.2216797 7 m
(')s
1 0 0 -1 1172.5508 480.39691 cm
-82.260742 7 m
(\(6/6.83#9:8/034/8/*;)[ 13.339844 11.123047 4.443359 11.123047 11.123047 4.443359 11.123047 6.660156 6.660156 13.339844 4.443359 4.443359 11.123047 11.123047 11.123047 4.443359 4.443359 4.443359 5.556641 0.000000 ] xS
5 w
1 J
1 j
0.60000002 i
/Cs2 SC
0.89803898 0.49019599 0.17254899 sc
1 0 0 -1 327 796 cm
836.27075 579.67859 m
836.27075 579.67859 845.5719 577.36261 855.82141 566.28571 c
857.83533 564.10925 859.69971 561.79572 861.39569 559.48291 c
S
0 i
CM
1195.6635 248.94598 m
1183.733 239.24103 l
1193.0562 233.7894 l
h
1195.6635 248.94598 m
f
0 J
0 j
1 0 0 -1 327 796 cm
868.66339 547.05402 m
856.73303 556.75897 l
866.05609 562.21057 l
h
868.66339 547.05402 m
S
1 J
1 j
0.60000002 i
940.53253 526.20618 m
940.53253 526.20618 966.67017 511.99747 980.53253 482.20618 c
988.33551 465.43695 989.42987 453.6156 989.32001 443.41937 c
S
0 i
CM
1316.0643 366.97079 m
1310.921 352.47711 l
1321.7194 352.66901 l
h
1316.0643 366.97079 m
f
0 J
0 j
1 0 0 -1 327 796 cm
989.06433 429.02921 m
983.92102 443.52289 l
994.7193 443.33099 l
h
989.06433 429.02921 m
S
3 w
1 J
1 j
[
12
12
] 0 d
0.60000002 i
0.69411802 0 0.109804 sc
874.07117 546.41888 m
1020.1763 704.38391 l
S
0 i
CM
1345.8313 88.696411 m
1345.9218 91.014244 1347.874 92.819931 1350.1918 92.72953 c
1352.5096 92.639122 1354.3153 90.686852 1354.225 88.369026 c
1354.1345 86.051193 1352.1823 84.245506 1349.8644 84.335915 c
1347.5466 84.426315 1345.741 86.378586 1345.8313 88.696411 c
f
0 J
0 j
[] 0 d
1 0 0 -1 327 796 cm
1018.8313 707.30359 m
1018.9218 704.98578 1020.874 703.18005 1023.1918 703.27045 c
1025.5096 703.3609 1027.3153 705.31317 1027.225 707.63098 c
1027.1345 709.94879 1025.1823 711.75452 1022.8644 711.66406 c
1020.5466 711.57367 1018.7409 709.6214 1018.8313 707.30359 c
S
CM
1202.4161 252.50076 m
1202.3258 250.18294 1200.3735 248.37724 1198.0557 248.46765 c
1195.7378 248.55806 1193.9321 250.51031 1194.0226 252.82816 c
1194.1129 255.14598 1196.0652 256.95166 1198.3831 256.86127 c
1200.7009 256.77087 1202.5066 254.81859 1202.4161 252.50076 c
f
1 0 0 -1 327 796 cm
875.41614 543.49921 m
875.32574 545.81708 873.37347 547.62274 871.05566 547.53235 c
868.73785 547.44196 866.93213 545.48969 867.02252 543.17188 c
867.11298 540.854 869.06519 539.04834 871.38306 539.13873 c
873.70087 539.22913 875.50659 541.1814 875.41614 543.49921 c
S
1 J
1 j
[
12
12
] 0 d
0.60000002 i
836.00159 584.29535 m
660.09991 707.91083 l
S
0 i
CM
984.38586 89.811691 m
986.6709 89.412788 988.19989 87.23703 987.80103 84.951996 c
987.4021 82.666962 985.22638 81.137932 982.94135 81.536827 c
980.65625 81.935722 979.12726 84.111481 979.52612 86.396523 c
979.92505 88.681557 982.10083 90.210587 984.38586 89.811691 c
f
0 J
0 j
[] 0 d
1 0 0 -1 327 796 cm
657.38586 706.18829 m
659.6709 706.58722 661.19989 708.76294 660.80103 711.04803 c
660.4021 713.33307 658.22638 714.86206 655.94135 714.4632 c
653.65625 714.06427 652.12726 711.88849 652.52612 709.60345 c
652.92505 707.31842 655.10083 705.78943 657.38586 706.18829 c
S
CM
1165.7157 209.98213 m
1163.4307 210.38103 1161.9016 212.55679 1162.3005 214.84183 c
1162.6993 217.12686 1164.8751 218.65588 1167.1602 218.25699 c
1169.4452 217.85809 1170.9742 215.68234 1170.5753 213.39729 c
1170.1765 211.11226 1168.0007 209.58324 1165.7157 209.98213 c
f
1 0 0 -1 327 796 cm
838.71564 586.01788 m
836.4306 585.61896 834.90161 583.44324 835.30048 581.1582 c
835.6994 578.87317 837.87518 577.34412 840.16022 577.74298 c
842.44525 578.14191 843.97424 580.31769 843.57538 582.60272 c
843.17645 584.88776 841.00073 586.41675 838.71564 586.01788 c
S
1 J
1 j
[
12
12
] 0 d
0.60000002 i
0.137255 0.36862701 0 sc
660.28137 709.91028 m
936.98041 528.65466 l
S
0 i
CM
1266.6368 265.5351 m
1264.366 266.00836 1262.9088 268.23288 1263.3821 270.50369 c
1263.8553 272.77448 1266.0798 274.23166 1268.3506 273.75842 c
1270.6215 273.28516 1272.0786 271.06064 1271.6053 268.78983 c
1271.1321 266.51904 1268.9076 265.06186 1266.6368 265.5351 c
f
0 J
0 j
[] 0 d
1 0 0 -1 327 796 cm
939.63678 530.4649 m
937.36597 529.99164 935.90881 527.76715 936.38202 525.49634 c
936.85529 523.22552 939.07983 521.76831 941.35065 522.24158 c
943.6214 522.71484 945.07861 524.93933 944.60535 527.21014 c
944.13208 529.48096 941.90759 530.93817 939.63678 530.4649 c
S
CM
984.625 87.899956 m
986.89581 87.426689 988.35297 85.202187 987.8797 82.931381 c
987.40643 80.660583 985.18195 79.203392 982.91113 79.676651 c
980.64032 80.149918 979.18317 82.37442 979.65643 84.645226 c
980.1297 86.916023 982.35419 88.373222 984.625 87.899956 c
f
1 0 0 -1 327 796 cm
657.625 708.10004 m
659.89581 708.5733 661.35297 710.79779 660.8797 713.0686 c
660.40643 715.33942 658.18195 716.79663 655.91113 716.32336 c
653.64032 715.8501 652.18317 713.62555 652.65643 711.3548 c
653.1297 709.08398 655.35419 707.62677 657.625 708.10004 c
S
1 J
1 j
[
12
12
] 0 d
0.60000002 i
1021.8996 699.42358 m
991.52203 433.47784 l
S
0 i
CM
1321.3331 364.08142 m
1319.8896 362.26566 1317.2476 361.96387 1315.4318 363.40735 c
1313.6161 364.8508 1313.3142 367.49292 1314.7577 369.30865 c
1316.2012 371.12439 1318.8433 371.42621 1320.6591 369.98273 c
1322.4747 368.53928 1322.7766 365.89716 1321.3331 364.08142 c
f
0 J
0 j
[] 0 d
1 0 0 -1 327 796 cm
994.33313 431.91858 m
992.88965 433.73434 990.24756 434.03613 988.43176 432.59265 c
986.61603 431.1492 986.31427 428.50708 987.75769 426.69135 c
989.20117 424.87561 991.84326 424.57379 993.65906 426.01727 c
995.47479 427.46072 995.77655 430.10284 994.33313 431.91858 c
S
CM
1346.0885 95.017174 m
1347.532 96.832916 1350.1741 97.134712 1351.9899 95.691254 c
1353.8055 94.247787 1354.1074 91.605667 1352.6639 89.789925 c
1351.2205 87.974182 1348.5784 87.672386 1346.7626 89.115852 c
1344.9469 90.559311 1344.645 93.201431 1346.0885 95.017174 c
f
1 0 0 -1 327 796 cm
1019.0885 700.98285 m
1020.532 699.16705 1023.1741 698.8653 1024.9899 700.30878 c
1026.8055 701.7522 1027.1074 704.39435 1025.6639 706.21008 c
1024.2205 708.02582 1021.5783 708.32764 1019.7626 706.88416 c
1017.9468 705.44067 1017.6451 702.79858 1019.0885 700.98285 c
S
/Cs1 SC
0 sc
1 0 0 -1 1268.0508 288.52582 cm
-5.5615234 7 m
(4)s
1 0 0 -1 1299.0508 369 cm
-5 7 m
(")s
1 0 0 -1 1177.0508 260 cm
-5.5615234 7 m
(0)s
1 w
1 J
1 j
[
8
5
] 0 d
0.60000002 i
/Cs2 SC
0.5 0.5 0.5 sc
1 0 0 -1 327 796 cm
612 235 m
1079 235 l
1079 795 l
612 795 l
h
612 235 m
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 1172.5 22.205116 cm
/F2.1[ 20 0 0 -20 0 0]sf
-130.52246 7.5 m
(!!)[ 8.417969 0.000000 ] xS
/F1.1[ 20 0 0 -20 0 0]sf
-113.68652 7.5 m
(5,<$!*/%7,\(6/6.83#9:8/034/8/*;)[ 5.556641 5.205078 10.000000 11.123047 10.000000 5.556641 4.443359 11.123047 11.123047 5.556641 13.339844 11.123047 4.443359 11.123047 11.123047 4.443359 11.123047 6.660156 6.660156 13.339844 4.443359 4.443359 11.123047 11.123047 11.123047 4.443359 4.443359 4.443359 5.556641 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
1451.6232 505.60309 m
1872.7246 505.60309 l
1872.7246 38.396912 l
1451.6232 38.396912 l
h
1451.6232 505.60309 m
f
2 w
[] 0 d
0.60000002 i
0 0 0 sc
1 0 0 -1 327 796 cm
1124.6232 290.39691 m
1545.7246 290.39691 l
1545.7246 757.60309 l
1124.6232 757.60309 l
h
1124.6232 290.39691 m
S
0 i
1 1 1 sc
CM
1619.0132 404.40927 m
1588.9844 408.6712 1557.405 399.13965 1534.311 375.81458 c
1495.2584 336.37164 1495.2584 272.42209 1534.311 232.97916 c
1573.3634 193.53603 1636.6798 193.53603 1675.7322 232.97916 c
1682.7644 240.08168 1688.5304 247.97884 1693.03 256.38446 c
1723.0588 252.12251 1754.6382 261.65408 1777.7322 284.97916 c
1816.7848 324.42209 1816.7848 388.37164 1777.7322 427.81458 c
1738.6798 467.25769 1675.3634 467.25769 1636.311 427.81458 c
1629.2788 420.71204 1623.5128 412.81488 1619.0132 404.40927 c
h
1619.0132 404.40927 m
f
3 w
0.60000002 i
0 0 0 sc
1 0 0 -1 327 796 cm
1292.0132 391.59073 m
1261.9844 387.3288 1230.405 396.86035 1207.311 420.18542 c
1168.2584 459.62836 1168.2584 523.57794 1207.311 563.02087 c
1246.3634 602.46399 1309.6798 602.46399 1348.7322 563.02087 c
1355.7644 555.91833 1361.5304 548.02118 1366.03 539.61554 c
1396.0588 543.8775 1427.6382 534.34595 1450.7322 511.02084 c
1489.7848 471.57791 1489.7848 407.62836 1450.7322 368.18542 c
1411.6798 328.74231 1348.3634 328.74231 1309.311 368.18542 c
1302.2788 375.28796 1296.5128 383.18512 1292.0132 391.59073 c
h
1292.0132 391.59073 m
S
0 i
1 1 1 sc
CM
1676.6101 291.80927 m
1730.8809 291.80927 l
1730.8809 237.39691 l
1676.6101 237.39691 l
h
1676.6101 291.80927 m
f
1598.6232 448.39691 m
1652.8938 448.39691 l
1652.8938 391.19263 l
1598.6232 391.19263 l
h
1598.6232 448.39691 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 327 796 cm
1271.6232 390.60309 m
1271.6232 390.60309 1280.0076 390.81467 1291.6232 393.60309 c
1303.2386 396.39151 1307.2404 405.82837 1312.6232 400.44559 c
1318.0059 395.06277 1306.8634 387.59048 1310.6232 374.60309 c
1314.3828 361.61569 1325.8938 354.60309 1325.8938 354.60309 c
S
1351.7246 559.60309 m
1351.7246 559.60309 1355.3854 558.65198 1357.6232 547.60309 c
1359.8608 536.5542 1351.783 523.65747 1359.6232 520.60309 c
1367.4633 517.54871 1372.7585 531.95917 1385.297 536.82184 c
1397.8354 541.68451 1403.8809 537.76715 1403.8809 537.76715 c
S
1141.5216 656.59918 m
1516.5216 654.60309 l
S
4 w
0.89803898 0.49019599 0.17254899 sc
1141.6232 712.60309 m
1506.7687 710.53088 l
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 1504.5724 124.39691 cm
-30.014648 7 m
(!"#$$%)[ 10.000000 10.000000 6.660156 11.123047 11.123047 0.000000 ] xS
1 0 0 -1 1474.6738 65.396912 cm
-5.5615234 7 m
(&)s
1 0 0 -1 1835.6738 65.396912 cm
-7.2216797 7 m
(')s
3 w
[
12
12
] 0 d
0.60000002 i
/Cs2 SC
0 0 0 sc
1 0 0 -1 327 796 cm
1506.1248 703.74738 m
1480.9572 438.59256 l
S
0 i
CM
1810.7975 358.91272 m
1809.3196 357.12488 1806.6721 356.8736 1804.8843 358.35147 c
1803.0964 359.82935 1802.8452 362.47675 1804.3231 364.26459 c
1805.8009 366.05243 1808.4484 366.30371 1810.2362 364.82584 c
1812.024 363.34796 1812.2753 360.70056 1810.7975 358.91272 c
f
0 J
0 j
[] 0 d
1 0 0 -1 327 796 cm
1483.7975 437.08728 m
1482.3196 438.87512 1479.6721 439.1264 1477.8843 437.64853 c
1476.0964 436.17065 1475.8452 433.52325 1477.3231 431.73541 c
1478.8009 429.94757 1481.4484 429.69629 1483.2362 431.17416 c
1485.024 432.65204 1485.2753 435.29944 1483.7975 437.08728 c
S
CM
1830.2844 90.747337 m
1831.7623 92.535187 1834.4098 92.786469 1836.1976 91.308594 c
1837.9855 89.830719 1838.2367 87.183319 1836.7589 85.395477 c
1835.281 83.607628 1832.6335 83.356346 1830.8457 84.834221 c
1829.0579 86.312096 1828.8066 88.959496 1830.2844 90.747337 c
f
1 0 0 -1 327 796 cm
1503.2844 705.25269 m
1504.7623 703.46484 1507.4098 703.21356 1509.1976 704.69141 c
1510.9855 706.16925 1511.2367 708.81665 1509.7589 710.60455 c
1508.281 712.3924 1505.6335 712.64368 1503.8457 711.16577 c
1502.0579 709.68793 1501.8066 707.04053 1503.2844 705.25269 c
S
1 J
1 j
[
12
12
] 0 d
0.60000002 i
1148.8667 708.27679 m
1428.4968 529.80048 l
S
0 i
CM
1758.1316 264.35794 m
1755.8666 264.85809 1754.4358 267.0997 1754.9359 269.36475 c
1755.436 271.62976 1757.6777 273.06049 1759.9427 272.56036 c
1762.2078 272.06021 1763.6385 269.8186 1763.1384 267.55356 c
1762.6382 265.28854 1760.3966 263.85779 1758.1316 264.35794 c
f
0 J
0 j
[] 0 d
1 0 0 -1 327 796 cm
1431.1316 531.64203 m
1428.8666 531.14191 1427.4358 528.90033 1427.9359 526.63525 c
1428.436 524.37024 1430.6777 522.93951 1432.9427 523.43964 c
1435.2078 523.93976 1436.6385 526.1814 1436.1384 528.44641 c
1435.6382 530.71149 1433.3966 532.14221 1431.1316 531.64203 c
S
CM
1473.2319 89.564789 m
1475.4969 89.064644 1476.9277 86.823029 1476.4275 84.557999 c
1475.9274 82.292969 1473.6858 80.862228 1471.4208 81.362366 c
1469.1558 81.862511 1467.725 84.104126 1468.2251 86.369164 c
1468.7252 88.634193 1470.9669 90.064926 1473.2319 89.564789 c
f
1 0 0 -1 327 796 cm
1146.2319 706.43524 m
1148.4969 706.93536 1149.9277 709.17694 1149.4275 711.44202 c
1148.9274 713.70703 1146.6858 715.13776 1144.4208 714.63763 c
1142.1558 714.13751 1140.725 711.89587 1141.2251 709.63086 c
1141.7252 707.36578 1143.9669 705.93506 1146.2319 706.43524 c
S
/Cs1 SC
0 sc
1 0 0 -1 1662.1738 480.39691 cm
-148.96484 7 m
(:*$#$.91.%!/!*$%*,1.%*.2#,-./%*!)[ 13.339844 5.556641 11.123047 6.660156 11.123047 11.123047 6.660156 14.443359 11.123047 11.123047 10.000000 4.443359 10.000000 5.556641 11.123047 11.123047 5.556641 5.556641 14.443359 11.123047 11.123047 5.556641 11.123047 11.123047 6.660156 5.556641 13.339844 11.123047 4.443359 11.123047 5.556641 0.000000 ] xS
1 0 0 -1 1758.0508 286.79382 cm
-5.5615234 7 m
(4)s
1 0 0 -1 1789.0508 367.26801 cm
-5 7 m
(")s
1 w
1 J
1 j
[
8
5
] 0 d
0.60000002 i
/Cs2 SC
0.5 0.5 0.5 sc
1 0 0 -1 327 796 cm
1102 235 m
1569 235 l
1569 795 l
1102 795 l
h
1102 235 m
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 1662.5 22.205116 cm
/F2.1[ 20 0 0 -20 0 0]sf
-190.49805 7.5 m
(!!!)[ 8.417969 8.417969 0.000000 ] xS
/F1.1[ 20 0 0 -20 0 0]sf
-165.24414 7.5 m
(5,'$%0$#/%7,:*$#$.91.%!/!*$%*,1.%*.2#!)[ 5.556641 5.556641 14.443359 11.123047 11.123047 11.123047 11.123047 6.660156 4.443359 11.123047 11.123047 5.556641 13.339844 5.556641 11.123047 6.660156 11.123047 11.123047 6.660156 14.443359 11.123047 11.123047 10.000000 4.443359 10.000000 5.556641 11.123047 11.123047 5.556641 5.556641 14.443359 11.123047 11.123047 5.556641 11.123047 11.123047 6.660156 0.000000 ] xS
1 0 0 -1 1151.7246 229.54929 cm
-5.5615234 7 m
(3)s
2 w
[
8
8
] 0 d
0.60000002 i
/Cs2 SC
0 0 0 sc
1 0 0 -1 327 796 cm
-96.318184 290.39691 m
-96.318184 251.06972 l
852.6059 250.97609 l
853.76862 277.50928 l
S
0 i
CM
1181.1888 508.89993 m
1184.3651 518.64832 l
1177.172 518.33313 l
h
1181.1888 508.89993 m
f
0 J
0 j
[] 0 d
1 0 0 -1 327 796 cm
854.18884 287.10007 m
857.36511 277.35168 l
850.17206 277.66687 l
h
854.18884 287.10007 m
S
1 J
1 j
[
8
8
] 0 d
0.60000002 i
852.6059 250.97609 m
1348.4216 251.28223 l
1348.4216 277.49692 l
S
0 i
CM
1675.4216 508.90308 m
1679.0216 518.50311 l
1671.8217 518.50311 l
h
1675.4216 508.90308 m
f
0 J
0 j
[] 0 d
1 0 0 -1 327 796 cm
1348.4216 287.09692 m
1352.0216 277.49692 l
1344.8217 277.49692 l
h
1348.4216 287.09692 m
S
1 J
1 j
[
8
8
] 0 d
0.60000002 i
1056.1016 518 m
1111.7231 518 l
S
0 i
CM
1448.3231 278 m
1438.7231 281.60001 l
1438.7231 274.39999 l
h
1448.3231 278 m
f
0 J
0 j
[] 0 d
1 0 0 -1 327 796 cm
1121.3231 518 m
1111.7231 514.40002 l
1111.7231 521.59998 l
h
1121.3231 518 m
S
1 J
1 j
[
8
8
] 0 d
0.60000002 i
568.19397 518 m
622.09998 518 l
S
0 i
CM
958.70001 278 m
949.09998 281.60001 l
949.09998 274.39999 l
h
958.70001 278 m
f
0 J
0 j
[] 0 d
1 0 0 -1 327 796 cm
631.70001 518 m
622.09998 514.40002 l
622.09998 521.59998 l
h
631.70001 518 m
S
ep
end
%%Trailer
%%EOF
