%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 436.000000 382.000000
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.14.1 (Build 18B75) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 436 382
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 436 382
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: Helvetica
%!FontType1-1.0: Helvetica 1.0000.0.0000
14 dict begin/FontName /Helvetica def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /s put
dup 34 /c put
dup 35 /r put
dup 36 /e put
dup 37 /n put
dup 38 /L put
dup 39 /R put
dup 40 /A put
dup 41 /B put
dup 42 /C put
dup 43 /D put
dup 44 /x put
dup 45 /plus put
dup 46 /hyphen put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -1947 1 index div -985 2 index div 2961 3 index div 2297 5 -1 roll div]cvx def
/sfnts [<
74727565000900000000000063767420000000000000009C0000036C6670676D000000000000040800000A1D676C79660000000000000E2800000CA8686561640000000000001AD000000036686865610000000000001B0800000024686D74780000000000001B2C000000406C6F63610000000000001B6C000000226D6178700000000000001B9000000020707265700000000000001BB0000003CF05C0001005BD00280580001A042F001F0000FFD90000FFDA0000FFD9FE55FFE605C70010FE6DFFF1033B000000B9000000B902FE3F3C00C0008D009B00AF000600A800C00028005E009800C9016A00B9015C00B400D6011E002E0080000400B8004C00CC01FFFFD1006600A400AF007400C2009500B1000C0028006D0015004C008E0125FF7A000C0040004C00620084FFA200240038008600BD0039005E008E00EDFFA9FFB300400052005500AA00AB00C200CB012302B10413FFAEFFE4000800510074008400AA00D1FF4CFFAF0012002C004200500051008400BE012503DAFF680018003B0098009C009F00A100C100EC018201B4FF68FF76FFD0FFE100020018001C00530053007D01B401E103AF0486FF9CFFEAFFFE001F0028002A00520060009300A300AA00AF00AF00C001000145016B0174019301950240028202B404850517FEFD00060029004700470048006F008800B400B900C400F200F901EF02180310037403C5FF35FFF3000B004B004C0052005500650076007600870087008E00AB00BB0106013001430150017D0194019501D3022A025502580277027802E6034E035C037903D3047304B2058C0598060BFEF5FFBBFFC7FFD50017001D005B0072007E009C00C200D000F400FA01030106011C0125013B0142015E015E0180019B02B901A101B9025001C001D002AA01DF01E301EF01FB0205020C0215022B0274029302AB02C202CE03690395039903DF03F5043E050205A105E5062507DBFE62FE89FECEFF3BFFE1FFF800030008002100390042004E005F0061006F00700034007F008E00AD00AD00AF00BD00C400C500C900C900C900E3011C00ED00F800F901000112011A0132014D014D014E014F01660169019E01BA01BA01BE01E301EF01F602000200020902110217021C02530262026D028002D50280031B032A034A035A03AF03AF03C803D603FB03FB04050413041504470449008C046D049A049A04A604A804B204CF0539053E054E055605800589058C036305D105D6067E068E06B206EF06F00728074C076F078C00B400C900C000C10000000000000000000000000004012400AF0032006E0063014401620096014301A10161008A00740064018801EF01700028FF5D037E0347023000AA00BE007B0062009A007D0089035C00A1FFD803AA00D70093006C0000008000A70442001D0597001D00820030002A







00>] def
/CharStrings 16 dict dup begin
/.notdef 0 def
/plus 1 def
/hyphen 2 def
/A 3 def
/B 4 def
/C 5 def
/D 6 def
/L 7 def
/R 8 def
/c 9 def
/e 10 def
/n 11 def
/r 12 def
/s 13 def
/x 14 def
/u20B8 15 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] def
/FontBBox{-1947 -985 2961 2297}def
/UniqueID 4072461 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C91B2145C684A74C06611B00C1FA345EA5AA002A80B57843F114AFEA926699F2E8022F1D1331DFE6254733147DDB94E77EAC1EAD51170D66C31355D7FFC56C96F93071D2CDD5F60123EB639124E6FA384D09402728516BADCC77378B25B43AF30DD9ECEDD132C55721777C2E64A1E5566EC6D7F51E0EBB8A765FB2D4FE6BA989BB45DCAD70C4470A11650C5988D9991A64F925538F6B55A4DB1E5684D1D8B7C2DCAA1ABFA083EBB2DD21D6CF5DC76648D77D1439BCE1061A9B487907EA02DD34E29DC08AB101F265958F707CFEDC6C24DFDD204F118DBBFD5D3ACF5A0D3FE9D171FEC7FA2A9AE5B2FCE6BFD3D6B765481044B36D54FF11EE08CA1B11DDF4E42D852696AB18B6CA547F946BC1F9C708E195C949963D4E0C1DAE8576D8626C43D646FBF9C6B5B69781F74351DAD37B714B9B60A76E3D05E717CCC5D06A8FAEC4D774D8DDBB372EDEE559675DA886303EDA965840ADD84FB67E4C2512A1E5914AC9949CBC10654185D17E2E900306B7BFE62BC21A78CCCE12E3263EB162F19D80DEA8582B313458D7B24ABDBB8796282AF5C18991ADC7272FA57DC22DB3B26A448B555E65613EFD4A236FCA7E7907EEC8362E33A7ED2BC8A2B6804A4D78AAE8CBEA40159321196C18204E2F1FD465B4B09E86170A0B0EC105F18E26CB7DA1D82BD98C50DA89665F33C76C1BC855ADD4623BD5863337100D2F62FB09211E292E15C3C605659C3F3E49F8A54C47F77F16C7AEA86B34A7EFA710C8EA7851E572619BCF242

6B3747A1E9D7AE9DAACA9CDA8AF67128324BCFDD8B170BEAE91A652F7D5B285960F2CBA3A2C828E2654101B04CD52EC7BB9842E7C849B90C4B22AC1A029614B7BB57E629FFFDC85705B8CD1EE2362581EA00A03E9F0F714F7B3A529F578ABE19E35F65F3C14B14E465A745456480742F5E685C1EC8095172DD5D256BECD20A50631F6712244D4195D4DDC65ECCE071218F9B31ADB7E8C54D62C2CDA2B20BBACA1220783CB14ADF41A86A5D54EC22C464D68E8FAD19F22C2123D64D2205E266F23F1F4C69D8402B3AC1C6A272DE862E06A60C957C9CA8F732649579E1256F683ACD58BC3CF4EFC00CBF084313D228149B0A9AA0E274D6305C640A0A942EC7E3C9A9672BDF3B611FF13C9B9E9856A55EB7736521724AF1C008AE3CF3B38F35985C648E486C89E9521A38E17341B324113ACE183CBB10E8BB583DB0411A744585BD6E9C8A8759F07DF16F3FDEE2B1FEDD016A58E28A9F3E9B734CF843913A50A47805DB6689A18C4C343CA4C0F684A225E465E2B204BFD0C5CF4CF232DAD86E1F481E648F7007C7E6FC86F305F6B1B81432E6DCEE2B3B4055D6875288886596FCA2173E863059E8B76D3A1DEB21CBF7FF282B65263680D394BA209DE5A5483BC29EE4ABA95F5B243DE3A9FA94B899382B6F1BB808771CA7973F5EEBFDFD2C22D4A41C8C7F559D6C0D2E0882FBDD6A04D8F48C5A170383
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/Helvetica cguidfix
/F1.1/Helvetica renmfont
%RBIBeginFontSubset: CMR10
%!FontType1-1.0: CMR10 1.00B%%CreationDate: 11/29/18% Copyright 2018 Apple Inc. and its licensors, all rights reserved.11 dict begin/FontInfo 9 dict dup begin/version (1.00B) readonly def/FullName (CMR10) readonly def/FamilyName (Computer Modern) readonly def/Weight (SnapShot) readonly def/isFixedPitch false def/UnderlinePosition -125 def/UnderlineThickness 31 defend readonly def/FontName /CMR10 def/PaintType 0 def/FontType 1 def/FontMatrix [0.0010 0 0 0.0010 0 0] readonly def/Encoding 256 array 0 1 255 {1 index exch /.notdef put} fordup 33 /Delta putreadonly def/FontBBox {-251 -250 1009 969} readonly defcurrentdict endcurrentfile eexecD9D66F633B846A989B9974B0179FC6CC4458BB4CB99E3608702C78822367AAF89059868F63F93207640A6BD5DA214789139C491E02A37BF3866F2964E8D690D48D9F6C4A5EC22355F8123573812483E06B968AE84B5F20A982A0E6576475351697AB8C6EA040355C5542F297D7A3AF28AB93EA0771E0D56DBF00F7CA9CE9FB9FC2E0ECB00D04D5F5F3F24B987B546D6274971A477DEE12C44623C180BCDBA21172627610C4736632D1A4693E79719C3BC43DF5330790A52DCD4CF455ACC213F6B1C4BA249179DB360225568161552A16682E3A3604BFC39D571B1F8F18375BEF1C23F12D94C18BF0A305FD1589F3966E11AB61C8D9A6E3A4CED5E952BE37620928FBFED65729BD8DB6111A00566C926EDD0D8568BD12C9358296FCB084BCA59460876F19F43AB77D968CC4C8477F67A4B37FBAB934722CBC73AEA734204A5F4A4BED72EDEDA9D0DCC83932B0DDD8F3805C6CB980AEC76D65154C11E5911482130E1E88436D90703CACDCF19455880042025DB109B0B224E751368204234BE0134EA659BC584546F6A910ABE7CB10E64407E83F804531227491DC1639277D791F0E83431F8B2CFA906BD8AEEC16070D1B8302B25B810E3F4153652D9265F63BA0053AF241AB5258640FCB55F8F6418DABD2E2FA8597D22903D0342144329DE15795BDCC14A91AE39308F230D15CB177EEFF5E5C67E5B5EFDCBBCAEE7B3BBFFC9D621DD7851A487AB839F2DCAF9D9783CE2C86851D2403A0C8A4A0764C42CAFE210E04A6F11A013F52E465430EE07A3B9ACB5ED61C71C9812FF15D336DDD8133F0E91433C676C54742F225965C9F5DAEDE658D58123A893766A3EFBE69FB035C4CB37159D6FCC4B89021C4021523EB7687AFFB1AF408563F04AEAAD1131F9FFC8C510F69318F1DE86EC910C1EAFD8C149D95D09BD411D4E2B87FEAA83BF2791D2E21E3CB8ABD5BE39B59ECF1E76DB12B04D88BA9FC4A44D8EC8A76638EF1A98755F5135C142B04F0B3163DA29B72AD744ED77A8A8913D9D654EC2549A93FC0F16204D4176C1DE7DF30141B63AF13F1BCDB37811D3FB430D2D105109465B5CB7766745729D0C389531594085F3BA40C06BE5D240C7708C8900CCB46756C56A5AF553EB6C95DFEB29CD92C943C892C66183A0215751D2046721C9333CF44BAE3303913ABCC7A6F6FF3DAF9A1F1E8D5834F37F2EAC46297E57E993B0BAF976261A17207C35A868F48511046B663A9058CC4DBA7FD8E28A6959F8DDB110B78AA4A74AAB8FFB6764BA1C384F4C7E0E7345A89ECC3934EDFB04A03C8DA2C5BD67D90A0063083634D28D370CC30EDF9169D2A481D804B0A8164BFCA9DF68F43D35A377C3698241DD7B516C664A74BBE85FE5CE121CA49587160B0565A907D31B3EB1A306E4A0FDDF58F70A7348327FBD4E56C36747B8FABF157B21CD8D254E22A2E3DFCD644826251086C4E36C7676C10D7CB87EFF1748E2E284D854028B96EFCEBC312BA39281A28CE3431FB60790DB55F1C655ABF2DF256608ABE89E6264DC779741BED537ED243855925DFCD7B17AD1D3620845C26DEA8930AD7503B9FA3DC232131F1B0BB547BE000D25209D32F7729DF35BF80CE3862C6F4C67C4CD0DB2D1C62B2A67081210F2823EEFBC4CB695D2521C5D94B792619290A02220AB6C734014415F5152B43E0CA2E3EF3379492A8A4BD498DDA9081A6CD25011A097240B1F923BFF8001650513790815A6085C6BD91B51D1B216DF1A683EDB8BABD10268F595FD48BAB5071BBD16E4465DE6438C5090366BA9F2D6AAF2C4F619372640D0A438659DBFEE1CD655688BB823912614014D30225FCCD0AEA3B3F0FF0BD81DCFC801144B97836CCF3CA9AD0C515BC3D3778DA267747D50B3E077ACC004BD897733BA1F9E42AAD8423922813B2FF4DFCD6AA29454A13980ED9D5322049FA361B297EF1AA1CC8D2736B4F9BDC164B19FDDB715924230354EF02464957A3595F78B3B241EF9282483B68F37AF4C338CAB7D65A0309024EFFA59D2319CF33C80A5C78BBAF0BD705D92F7CB0FCF960B1D484DE6273B524799BB4C7DFA59EBC2AAB4E791EA632732B2B170A8333E1BB4D18BDFA6A50450AB550CF92216D8E72297136DAA66F83873995ADA5AE77ACEC4309768E7847934330E097DF1A4AC0271446FE2B03DC2E83C9EEB4AC3F653DBE929B0AC00CFF8E50D67CF3050DD872936B13337B94F29319191188011406C3BA7825BCE73839185EA5656F7BB801953F006C3BF51F34AB829006AC957D2231C398B8CEC116A108C02DCE161E32D46AE4301A439822ECD9B33AEB5280C3918BDD26138892F49DA04CDDEB7BB3B4EA2F46D422BA503FDE7708C70DCC11F4BE39E66E1A8A16B11D6A0ADF9901DD0074DF7E8D7AF3D35DFF44F48B5C0EB573B4BC64BAEA0E60915EC41B5E54FC44B81BEB30BD00980D2E076FED7E0076C1A5F67298D0E3CF13A63AECCF66A3754855EC1D7C7D8023133FAE15F35F0197C8D35E51EB5849B1A0FEA8285C471BEEB418C8CC0DA4DE4AE8F4DB3943FFFA48C18248339F6D08D7135005B405EF40C5A80DA542C1830FACF0D34726E58BD1B82C4A6F38C059849EA26BF9684B2F7E8CF9A3253EA68B44A47E7251A7A6AA624EBF5ED906B2EF4D4CA24F27B90421E11ABDDD0199F480CB0620B4E20FDE16C58ADA3FA7AC524FABC7CD5A4236990C524DB1B7AB4936C4365139B8DC5474CB8CEEA1217DA7D9B6BAE9CDFA3550BFBF15127C138D10FA76DCFA83AA20D03CAEFA9BA23A5E399B1C3354F00828FCA9423B8FA82BDDF2A09E0065D32915518228C7311F136D3040D518B660B06C10324E83611F5C25D04350E15CD560771B730771570CD22221CF6D838C8D30FB549F68CFA20C3CDB471ED61389A7BE047CC23078EB1FD8CC0B687AA3ED249845E4CC6B1D66E74D7D350E0F0AAF5D8A3D6ADEC2C6F9305A4FEDE762D3B2D746A5B221F6292005F935AB6D1B6A76E6912B0C727149CCEC5DD3C7C737733F87338A11330AF44B13C21866B0825CDCF0362B5B91C50B5536EDE7068A94928601F8BBF29D7531E5FC25B501830BFA0B33E37595A1F6D0CB5709DDB1B2AB6301C1F18F82E148EDF286CECB3C325EC78FD8E5D608618F3AB10299B2877BFD3942E2E770561402FC61BA7A35B2DA1CAAD4A04B8799718AB8A71AB3B34224163FA9FB3242787FF84EEC79C36048D40D702D0AA8B9B94C61114D0AAC963F071C35730A63ECC1356D6BDEB030ECEBBFF21AD27DA0C795C825D6647C9BBF1C7978F16B704AE803BBDE953AE2C6E5B939132746D00C04C016918BFB1D1E005A450973146E13FE9CC28B6BA9500A0BE0A16EE8E6F077327592E31624FEF302DD9095D7B40919CF55F8F8C503D95961B50BD7720419431FF66449B49D8BD327356A9969C789F940C1907D06EBFBA996D40D654E6CB33FC297151F43EDFE47155FB6A75EAFB888D35D9AC6B7D6DE3FA5B56A1F54D2E9C19A647AC4CA6B4BE3EED6C8D90D525C22856D04E65AC7CB9B1AB983E19718EA004623BF0E2A1BAE65826B667E5E98BDE1822FEFB731F6A8C2F893717A474557BEB3CC4BE974357C53315134D61F3F7B5BFA5F0AA32A9C39516DA561E1A0A8F65CEDAF47B22E9039F2FC9316355A8B7AA708AA5B1CC113B60FF22C1AF1578CB1921F1C6B7FE53EAA039CF989068994B9EAA559A90C763E5C8826911C7EDA3D633FCC6459DC669AC95E3665337ED07FB9D10A37AB3AC9CDEA2675896DA3386DFEF012DDEDF9F6BBB95AA09149ECFB3D6AF023F31E15EB2D7A4A9A720A667D6371C336C2536161C53E2888E24BF2685506AD263DADFF5D2B25F834D124D73CAD5E850876E3944C3A6118609D9C2ECAEB96A62720BA4617CC850F8171CF8434E90FADF47D790E9773EB848867C335DE79071F0FD1D53D4370FFBBC9C94F3B5F357868708CE3D0CD238E967163FACF2AEE11F7A34A27595B0AC0DE4ABC7BEA6CD96115F6EDEC3942730695DF6AB539D926DDC256EEE5D977478B6674FEDA13FBC4EC7621F19913A701F47F36B73247F254D4FE63200B4109CD31260E5431F76915C2433614A6C8329C51750F252FD1B0936A93992FB9BBE3FFC1DB2642DD08E2548030C2264A73FC35A60FC8DD26085B8D2505A3A99DA006CFC78F076A197E6D3CFDF92FB6267547C60B79F423BBFC446BC2C8ACB0D13D1394FA2DF97503841A7F2CDEAD7046EEC1D914100D1ABD9F6315F2E0056805344615101C2487FE812253984187EF18F62791CF103FC320EF42989BCEB473714A7F2AACD4531B3007E3B52A5843C69FD71E307F61D3941F8737A05112AA126B5073707CF197878DDAF49D0A65A3CA5A280CABE73BBA5436A650FF283B8D7A0E6A9A568C84A3DD7467D454FA85FB507A9537C5C2D9114207EAB5380A45439E039D818390E4347D1B2C5C9F9AFC7F0C0FCB9851C6B17BE324369E9202F85515C8331E438E5AC22938A6C46D5B9A04BB425D1555472A6D5C3613B8E6EA5AD4757E4276D39678557FC19D44E90BC6C024FC80F4C0D2021582B8D44E08CE30AF5A1F3F5F783F0F25341773532774810C2C66DC599A05CA72BA553D7FA04B419ACC1A46FF1C2AA88452EC82D8050B71A79CA34229B38F7E6F2CA82114FF9E0DAF8E2EDD12EE82ECF28B75D32065C2BDB8BFB53F29D547C415671D94B3AC9699ACE5F4657B3333A9B8DAB28F56750930B58B959A1983430D9B3B8D51D477E041659EC4F38677A8E0989058C042323B83C821A9EAFCD629EB0AC5D260E4D887CCC118E805366F2621D3F8CC9C236ACB1114666CD97331825427D00C9E7B531A14855A56A920C4BEB764573BEE4C45FF0960A7CFB6BDD56F2AD7C023B7447CDCF669364E9B6344E919DC441B51DE74747D149A99678DC0DE36058C8292CAE40CBEFC468F78DA23C3CF486DE8C0E259B8195F6130409FAE11C894690C51DB237ED9DA48639E87A17676CC117FE52AF67FB2A547568F3DA9B5F1C5EABAA626B41E5BD6EFE0165FF0D3A581721DB20962888594A6615CD31A7D2FFBB411E17E2440CDB672F710B7D66762A36C9E41592974574EDD8B8F03384086936E9BA44C6AD25A2F212C8FE5A2F8904E8DBC629038F3CC2F529A6DC037958DB2E399CA9AD58D194280EBB9E7C598419DF60F69FB31E63DA556B5C5CBEC16EF9C87A215F1AF7270E89A48355933470D7C33806BA164CB072141FB772F8028C3802E765CDBB3EAFC01B43445E5E9DDAA57DE6E431DDCC196D412479EB6C30D8E26FFDDB2090CC4B51DD3E1027B6FD2E6B03A798FE3A4C1EAE104BD6731AD2560B94B2957BB9A1D6809902ED9784F0315D8C2680DBFCFA995B62DD34C70D3E5E29209C17BB7CD78477E9EEA7DCCFDA90637DA8C65FAEA2E7DF842916A45E37AAC5747BBB219C0AE897D6B9F9330708A5CF4EE96916C9F2367E03952007DAFAF7ACE3BAC67023C480484386DCF5D1484A4440321A00B522EF36B3BC089F7DE5FF6C2A0043331B9A9126F3FDCC1459617E3C31DC0A0B7E91A1CE160F16B91A5083C63BEE4E5E76C542F8AAC280496112F772CB2EE2BB554235D4BCD2EAEA7E8598A043D6AF62524C73FFE937972DE35A68C469E387D28E106606E3ACFA8C2682F7CD70D0EAFABA7104742A5FBA1D3B717EDB3C11D0D17DFC7CF0D96C3FB9435FAAEEC6881F3E3DC4B0D23EE720D012642B0FF6F5BD637F948933CBBD61593ACEC072CC7B3C87951D0731BE2B9AD14F47D33EAA52C1174AAD5F9ABB3FC7B047601191638761A73F028E57BE010E747CB940A2383E80CD4C6463AAE187CF551A8D44199FCE2C8921B8114760434423CD5356F329ADFDFFE189D75D022A9D6BA42ACA3145E917E445A578B0ED07A160F9D4F283F34C1221448A9F5B0836FB8D09282DBF2D38BE79E6B668B4104BDFA4C9B5CD614218487E6BD0736003F47E66D3F4B2490A4F7D344C80345E3C195866009B0896CD0D23FDEB0DABC39B9FF1BC884EEDA16C9846EECFD3FD9601D56C5E6453D69FFD0AFDCB31846E8EFA689A00F4B9461757A48853B251FE8B7A407DF9BF03EB02EBEA30EDB05654DB6BB3B5BDC389BABC8BD24D7989C05472DE8CE7E88B1ED5828CB7396FF59F929ACF95A4386402AB9568D8A87E30010A72BE005D5433871CDA51917A814E5567A5DF8BA685321F276203DA3641A7619FC62E5550F99852E6C44221D0D4B5B59D55725CCB882DC0D621D97D4F38EB3DD5607BCC288F0310D82E07026CA7E0F3B9326C4D53FDE4706C99338007FD84EB265F2EB49404CA19B84F2C4F90BCA1CB8F170DED0C4F83649B9155A2DF2E35143E1807A19623F3E7E77E5E6FB1BECB8C169E397F20B3941CCF3AD55F27F42F8A1837A96BC4A1FFA7DD371F0696146394BFB4EE656ED00809541945DD7B66E477C62544A8B63C0AC3F759CEC53C006059A8911C5D4EF538CF527267003A7359D1A749D54A7CA8BCCBF6917364113D1016290963521B5D0DC3AB037A28BD50A39AD41D51AB782DDDEA2D9519B792D261F7D392A84C393C8F2C8CA160DC18D93DEFB149E235A67609FA83D4DE3D9181B88563D1A36FED2760DE1F346276EC91F06B6D156A97A6C3B4386C78E2BC76052DFE37EE750C23F3B2188EA642BB396E55ABA74D0E9E30A3DC24D646EE5F953329357A4DAB65416F1FCC180AD404438DCAD39390317B4A0A1B6DF337E0D6CBE5B10E67E6F4D32FAC11DF5DEE856394C44CFAD07E05BDCABCC0E9779639B7396887F0989750B6738B506D66EEEEA084FCDE1FD27C95B0BE133227169F87215B73FFB6E2C50BC8F5B93D6C2CDF16E6E31E18066BC391F478612F6D7341D895F4D3C72CBFC7E62C5C09E0580C3EF113506CDD9A6780301434A8C4D753EF17C08F36D9DC2F6BF1827BC4D339341C9C8A3529902732ECA0F7DFC3230CCDFEA63E35B8A6A33BC1083629EF355E7FC3B34F205A28469C8CEF9A5F270D9529B10D4E46DB0590163F74C5433EF741ACE488783CED4FF4CD4B84D12B64CBC0B79ED45F46F0293C8655612ED4B406C96A0A48F32CD150B34B48BE1F6306188D1C9F1301A8A6FCF6C2412956C8A6DE574B9E5FA6A95C3F43F0A756C3D9BA3F17BEA24FAAFDF908AEE068E54DE1AED06ABADFB1688A5FD85500C2A0EF38B46D84C1AF6B92C6817F9B99669A7920C36984900956EFB90A82B3F8E7CDDB04F5C96A50519DF6A06D4E9373CDC513791B8DD1C1F1BC4BB87ABEBD369293FD371B1CF104783BDA40F5489FA1EFFF003843D92FAE6B6FF0A14DE72EC7174BEEE2D0ACD4A6F0A6EBEAB321E8D1B1A79929E88BCD3886D355A17A0D4F735907D7C6796F4C2D3F9D0C11515C017985C9E2D676342B5EEE766F17A78F0272CC08450D354BCEAC835035CA459C25B8E25A819481920F1BDAD5F84D9546FF785C7DD63C0B1CEA13ED9122B00272269D6BEE86AC0741768847D758C846CECC1DCD3F4AAAB69EE23D558A69EE7746BB6494C94302B2FD757EEE719682FD371A070EFFD37E0ECC0AF7DD2976C821DFF79F97A9B93EC0186D1D38A14DD4DE3C562D99392756DB97E666E25CD3872B0A415DE551AE34A6312D07C2718D800F0513AB47B4C693286F6519FAFE367C4E2C76497FB391937D71468CEB0CBEE6C40C53B9AF685A724684803ECCAFBD2D7FE0D9A9258F2D67453F10DB5D0F001E37E3883969C4D01ECA9829BFE8C1B7921D39BFCD1E02DDCDA124E0EC83C7AE30CB8E66D9E58573C8E76FF5F96E22ACCC0D27BA364C8AA6A01437B33D383222A430AF2E4A6FD706CE0F456EBDEACD301BBDD2724F9061D7C90E27060DBC323C91F8AA6C72A24DBBE0651BB542A1648F22322F281D32B490F3B5FFDB1471D5DCC210397727A42123587207AE651643FB175D1C27A12F1CBC69AB6046403AF151974ED23D0DD02CDEE6002564E8BA7647AE4CF558371F45279A18E324AB948BFB58155F8E4A06D47AF3A9DD8A0F82493CD6E6B2358E92EE8532740C2EF72055969FE183556A690AA504EE5B59CF7304A39311F865BA3DFFA54DF513ABB42D7C008980EEC4A2EF8251DC7BAA89574816343AD594C0EAF0785DC561421C27EE9055710213B59770953EC2A7505BBB3046F432F6249B80B9C42BC0048050170E76D2DF8E316D6AE683CD07D7448E213D82C5A72FE7C22976E397CB39040962443933149EFFCF1897F06D46E1730241BD58EC7B28C4DFBB7DAC1B59B63653ED21279648B22E6CB454395C6DEB9FF2AE0088A4A1D2AD141B5014B932FC5EBAC5B1C5A25C915F4E26656DD8A36663C5D26220640F3FC4F5EE3A1225253D4E5526B66BC38B0CC9669D8D3BCED9759D337AD5D75F9D1AD8EADCFEE7E92E6E8AA3D24B16C02DD2700B38840C28F6B60CC76D680679E8BCA32F3D0631A72C452F9890E40089C02D1221F5965587898B8CC093A34EC830D1B8F8B6134758400CB1EECA4A9775F0CE7FC35C33F6CFC5C1F967064D10091F95B70BEF74C9E4F13E58698625B61A78970B4BA76B3AA449A3561BFFF651501BC4EB570C564ABA2727481B49CCA806345EE64DCCAA637D5D0A9E6A4B58ADA2147F73C29F1AF814C5F42072830A4C2FC0CEE7FA42E7C6D3315DBF1E69689725B3FDF9CFC6EED2C10A2AABF5FB22F29266A3F12AE3EE355D9420D4C6E96D90D477BE09B3C0A8819C861A09BC48B07A66DA54E12F904D49B1BFE860AFB30DD26EE9D5119608D44B6A34282399B6D40EBDA7A873A6519B91088F7D2C833C7B4A96732F89900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cleartomark%RBIEndFontSubset
/CMR10 cguidfix
/F2.1/CMR10 renmfont
%RBIBeginFontSubset: CMR10
%!FontType1-1.0: CMR10 1.00B%%CreationDate: 11/29/18% Copyright 2018 Apple Inc. and its licensors, all rights reserved.11 dict begin/FontInfo 9 dict dup begin/version (1.00B) readonly def/FullName (CMR10) readonly def/FamilyName (Computer Modern) readonly def/Weight (SnapShot) readonly def/isFixedPitch false def/UnderlinePosition -125 def/UnderlineThickness 31 defend readonly def/FontName /CMR10 def/PaintType 0 def/FontType 1 def/FontMatrix [0.0010 0 0 0.0010 0 0] readonly def/Encoding 256 array 0 1 255 {1 index exch /.notdef put} fordup 33 /Delta putreadonly def/FontBBox {-251 -250 1009 969} readonly defcurrentdict endcurrentfile eexecD9D66F633B846A989B9974B0179FC6CC4458BB4CB99E3608702C78822367AAF89059868F63F93207640A6BD5DA214789139C491E02A37BF3866F2964E8D690D48D9F6C4A5EC22355F8123573812483E06B968AE84B5F20A982A0E6576475351697AB8C6EA040355C5542F297D7A3AF28AB93EA0771E0D56DBF00F7CA9CE9FB9FC2E0ECB00D04D5F5F3F24B987B546D6274971A477DEE12C44623C180BCDBA21172627610C4736632D1A4693E79719C3BC43DF5330790A52DCD4CF455ACC213F6B1C4BA249179DB360225568161552A16682E3A3604BFC39D571B1F8F18375BEF1C23F12D94C18BF0A305FD1589F3966E11AB61C8D9A6E3A4CED5E952BE37620928FBFED65729BD8DB6111A00566C926EDD0D8568BD12C9358296FCB084BCA59460876F19F43AB77D968CC4C8477F67A4B37FBAB934722CBC73AEA734204A5F4A4BED72EDEDA9D0DCC83932B0DDD8F3805C6CB980AEC76D65154C11E5911482130E1E88436D90703CACDCF19455880042025DB109B0B224E751368204234BE0134EA659BC584546F6A910ABE7CB10E64407E83F804531227491DC1639277D791F0E83431F8B2CFA906BD8AEEC16070D1B8302B25B810E3F4153652D9265F63BA0053AF241AB5258640FCB55F8F6418DABD2E2FA8597D22903D0342144329DE15795BDCC14A91AE39308F230D15CB177EEFF5E5C67E5B5EFDCBBCAEE7B3BBFFC9D621DD7851A487AB839F2DCAF9D9783CE2C86851D2403A0C8A4A0764C42CAFE210E04A6F11A013F52E465430EE07A3B9ACB5ED61C71C9812FF15D336DDD8133F0E91433C676C54742F225965C9F5DAEDE658D58123A893766A3EFBE69FB035C4CB37159D6FCC4B89021C4021523EB7687AFFB1AF408563F04AEAAD1131F9FFC8C510F69318F1DE86EC910C1EAFD8C149D95D09BD411D4E2B87FEAA83BF2791D2E21E3CB8ABD5BE39B59ECF1E76DB12B04D88BA9FC4A44D8EC8A76638EF1A98755F5135C142B04F0B3163DA29B72AD744ED77A8A8913D9D654EC2549A93FC0F16204D4176C1DE7DF30141B63AF13F1BCDB37811D3FB430D2D105109465B5CB7766745729D0C389531594085F3BA40C06BE5D240C7708C8900CCB46756C56A5AF553EB6C95DFEB29CD92C943C892C66183A0215751D2046721C9333CF44BAE3303913ABCC7A6F6FF3DAF9A1F1E8D5834F37F2EAC46297E57E993B0BAF976261A17207C35A868F48511046B663A9058CC4DBA7FD8E28A6959F8DDB110B78AA4A74AAB8FFB6764BA1C384F4C7E0E7345A89ECC3934EDFB04A03C8DA2C5BD67D90A0063083634D28D370CC30EDF9169D2A481D804B0A8164BFCA9DF68F43D35A377C3698241DD7B516C664A74BBE85FE5CE121CA49587160B0565A907D31B3EB1A306E4A0FDDF58F70A7348327FBD4E56C36747B8FABF157B21CD8D254E22A2E3DFCD644826251086C4E36C7676C10D7CB87EFF1748E2E284D854028B96EFCEBC312BA39281A28CE3431FB60790DB55F1C655ABF2DF256608ABE89E6264DC779741BED537ED243855925DFCD7B17AD1D3620845C26DEA8930AD7503B9FA3DC232131F1B0BB547BE000D25209D32F7729DF35BF80CE3862C6F4C67C4CD0DB2D1C62B2A67081210F2823EEFBC4CB695D2521C5D94B792619290A02220AB6C734014415F5152B43E0CA2E3EF3379492A8A4BD498DDA9081A6CD25011A097240B1F923BFF8001650513790815A6085C6BD91B51D1B216DF1A683EDB8BABD10268F595FD48BAB5071BBD16E4465DE6438C5090366BA9F2D6AAF2C4F619372640D0A438659DBFEE1CD655688BB823912614014D30225FCCD0AEA3B3F0FF0BD81DCFC801144B97836CCF3CA9AD0C515BC3D3778DA267747D50B3E077ACC004BD897733BA1F9E42AAD8423922813B2FF4DFCD6AA29454A13980ED9D5322049FA361B297EF1AA1CC8D2736B4F9BDC164B19FDDB715924230354EF02464957A3595F78B3B241EF9282483B68F37AF4C338CAB7D65A0309024EFFA59D2319CF33C80A5C78BBAF0BD705D92F7CB0FCF960B1D484DE6273B524799BB4C7DFA59EBC2AAB4E791EA632732B2B170A8333E1BB4D18BDFA6A50450AB550CF92216D8E72297136DAA66F83873995ADA5AE77ACEC4309768E7847934330E097DF1A4AC0271446FE2B03DC2E83C9EEB4AC3F653DBE929B0AC00CFF8E50D67CF3050DD872936B13337B94F29319191188011406C3BA7825BCE73839185EA5656F7BB801953F006C3BF51F34AB829006AC957D2231C398B8CEC116A108C02DCE161E32D46AE4301A439822ECD9B33AEB5280C3918BDD26138892F49DA04CDDEB7BB3B4EA2F46D422BA503FDE7708C70DCC11F4BE39E66E1A8A16B11D6A0ADF9901DD0074DF7E8D7AF3D35DFF44F48B5C0EB573B4BC64BAEA0E60915EC41B5E54FC44B81BEB30BD00980D2E076FED7E0076C1A5F67298D0E3CF13A63AECCF66A3754855EC1D7C7D8023133FAE15F35F0197C8D35E51EB5849B1A0FEA8285C471BEEB418C8CC0DA4DE4AE8F4DB3943FFFA48C18248339F6D08D7135005B405EF40C5A80DA542C1830FACF0D34726E58BD1B82C4A6F38C059849EA26BF9684B2F7E8CF9A3253EA68B44A47E7251A7A6AA624EBF5ED906B2EF4D4CA24F27B90421E11ABDDD0199F480CB0620B4E20FDE16C58ADA3FA7AC524FABC7CD5A4236990C524DB1B7AB4936C4365139B8DC5474CB8CEEA1217DA7D9B6BAE9CDFA3550BFBF15127C138D10FA76DCFA83AA20D03CAEFA9BA23A5E399B1C3354F00828FCA9423B8FA82BDDF2A09E0065D32915518228C7311F136D3040D518B660B06C10324E83611F5C25D04350E15CD560771B730771570CD22221CF6D838C8D30FB549F68CFA20C3CDB471ED61389A7BE047CC23078EB1FD8CC0B687AA3ED249845E4CC6B1D66E74D7D350E0F0AAF5D8A3D6ADEC2C6F9305A4FEDE762D3B2D746A5B221F6292005F935AB6D1B6A76E6912B0C727149CCEC5DD3C7C737733F87338A11330AF44B13C21866B0825CDCF0362B5B91C50B5536EDE7068A94928601F8BBF29D7531E5FC25B501830BFA0B33E37595A1F6D0CB5709DDB1B2AB6301C1F18F82E148EDF286CECB3C325EC78FD8E5D608618F3AB10299B2877BFD3942E2E770561402FC61BA7A35B2DA1CAAD4A04B8799718AB8A71AB3B34224163FA9FB3242787FF84EEC79C36048D40D702D0AA8B9B94C61114D0AAC963F071C35730A63ECC1356D6BDEB030ECEBBFF21AD27DA0C795C825D6647C9BBF1C7978F16B704AE803BBDE953AE2C6E5B939132746D00C04C016918BFB1D1E005A450973146E13FE9CC28B6BA9500A0BE0A16EE8E6F077327592E31624FEF302DD9095D7B40919CF55F8F8C503D95961B50BD7720419431FF66449B49D8BD327356A9969C789F940C1907D06EBFBA996D40D654E6CB33FC297151F43EDFE47155FB6A75EAFB888D35D9AC6B7D6DE3FA5B56A1F54D2E9C19A647AC4CA6B4BE3EED6C8D90D525C22856D04E65AC7CB9B1AB983E19718EA004623BF0E2A1BAE65826B667E5E98BDE1822FEFB731F6A8C2F893717A474557BEB3CC4BE974357C53315134D61F3F7B5BFA5F0AA32A9C39516DA561E1A0A8F65CEDAF47B22E9039F2FC9316355A8B7AA708AA5B1CC113B60FF22C1AF1578CB1921F1C6B7FE53EAA039CF989068994B9EAA559A90C763E5C8826911C7EDA3D633FCC6459DC669AC95E3665337ED07FB9D10A37AB3AC9CDEA2675896DA3386DFEF012DDEDF9F6BBB95AA09149ECFB3D6AF023F31E15EB2D7A4A9A720A667D6371C336C2536161C53E2888E24BF2685506AD263DADFF5D2B25F834D124D73CAD5E850876E3944C3A6118609D9C2ECAEB96A62720BA4617CC850F8171CF8434E90FADF47D790E9773EB848867C335DE79071F0FD1D53D4370FFBBC9C94F3B5F357868708CE3D0CD238E967163FACF2AEE11F7A34A27595B0AC0DE4ABC7BEA6CD96115F6EDEC3942730695DF6AB539D926DDC256EEE5D977478B6674FEDA13FBC4EC7621F19913A701F47F36B73247F254D4FE63200B4109CD31260E5431F76915C2433614A6C8329C51750F252FD1B0936A93992FB9BBE3FFC1DB2642DD08E2548030C2264A73FC35A60FC8DD26085B8D2505A3A99DA006CFC78F076A197E6D3CFDF92FB6267547C60B79F423BBFC446BC2C8ACB0D13D1394FA2DF97503841A7F2CDEAD7046EEC1D914100D1ABD9F6315F2E0056805344615101C2487FE812253984187EF18F62791CF103FC320EF42989BCEB473714A7F2AACD4531B3007E3B52A5843C69FD71E307F61D3941F8737A05112AA126B5073707CF197878DDAF49D0A65A3CA5A280CABE73BBA5436A650FF283B8D7A0E6A9A568C84A3DD7467D454FA85FB507A9537C5C2D9114207EAB5380A45439E039D818390E4347D1B2C5C9F9AFC7F0C0FCB9851C6B17BE324369E9202F85515C8331E438E5AC22938A6C46D5B9A04BB425D1555472A6D5C3613B8E6EA5AD4757E4276D39678557FC19D44E90BC6C024FC80F4C0D2021582B8D44E08CE30AF5A1F3F5F783F0F25341773532774810C2C66DC599A05CA72BA553D7FA04B419ACC1A46FF1C2AA88452EC82D8050B71A79CA34229B38F7E6F2CA82114FF9E0DAF8E2EDD12EE82ECF28B75D32065C2BDB8BFB53F29D547C415671D94B3AC9699ACE5F4657B3333A9B8DAB28F56750930B58B959A1983430D9B3B8D51D477E041659EC4F38677A8E0989058C042323B83C821A9EAFCD629EB0AC5D260E4D887CCC118E805366F2621D3F8CC9C236ACB1114666CD97331825427D00C9E7B531A14855A56A920C4BEB764573BEE4C45FF0960A7CFB6BDD56F2AD7C023B7447CDCF669364E9B6344E919DC441B51DE74747D149A99678DC0DE36058C8292CAE40CBEFC468F78DA23C3CF486DE8C0E259B8195F6130409FAE11C894690C51DB237ED9DA48639E87A17676CC117FE52AF67FB2A547568F3DA9B5F1C5EABAA626B41E5BD6EFE0165FF0D3A581721DB20962888594A6615CD31A7D2FFBB411E17E2440CDB672F710B7D66762A36C9E41592974574EDD8B8F03384086936E9BA44C6AD25A2F212C8FE5A2F8904E8DBC629038F3CC2F529A6DC037958DB2E399CA9AD58D194280EBB9E7C598419DF60F69FB31E63DA556B5C5CBEC16EF9C87A215F1AF7270E89A48355933470D7C33806BA164CB072141FB772F8028C3802E765CDBB3EAFC01B43445E5E9DDAA57DE6E431DDCC196D412479EB6C30D8E26FFDDB2090CC4B51DD3E1027B6FD2E6B03A798FE3A4C1EAE104BD6731AD2560B94B2957BB9A1D6809902ED9784F0315D8C2680DBFCFA995B62DD34C70D3E5E29209C17BB7CD78477E9EEA7DCCFDA90637DA8C65FAEA2E7DF842916A45E37AAC5747BBB219C0AE897D6B9F9330708A5CF4EE96916C9F2367E03952007DAFAF7ACE3BAC67023C480484386DCF5D1484A4440321A00B522EF36B3BC089F7DE5FF6C2A0043331B9A9126F3FDCC1459617E3C31DC0A0B7E91A1CE160F16B91A5083C63BEE4E5E76C542F8AAC280496112F772CB2EE2BB554235D4BCD2EAEA7E8598A043D6AF62524C73FFE937972DE35A68C469E387D28E106606E3ACFA8C2682F7CD70D0EAFABA7104742A5FBA1D3B717EDB3C11D0D17DFC7CF0D96C3FB9435FAAEEC6881F3E3DC4B0D23EE720D012642B0FF6F5BD637F948933CBBD61593ACEC072CC7B3C87951D0731BE2B9AD14F47D33EAA52C1174AAD5F9ABB3FC7B047601191638761A73F028E57BE010E747CB940A2383E80CD4C6463AAE187CF551A8D44199FCE2C8921B8114760434423CD5356F329ADFDFFE189D75D022A9D6BA42ACA3145E917E445A578B0ED07A160F9D4F283F34C1221448A9F5B0836FB8D09282DBF2D38BE79E6B668B4104BDFA4C9B5CD614218487E6BD0736003F47E66D3F4B2490A4F7D344C80345E3C195866009B0896CD0D23FDEB0DABC39B9FF1BC884EEDA16C9846EECFD3FD9601D56C5E6453D69FFD0AFDCB31846E8EFA689A00F4B9461757A48853B251FE8B7A407DF9BF03EB02EBEA30EDB05654DB6BB3B5BDC389BABC8BD24D7989C05472DE8CE7E88B1ED5828CB7396FF59F929ACF95A4386402AB9568D8A87E30010A72BE005D5433871CDA51917A814E5567A5DF8BA685321F276203DA3641A7619FC62E5550F99852E6C44221D0D4B5B59D55725CCB882DC0D621D97D4F38EB3DD5607BCC288F0310D82E07026CA7E0F3B9326C4D53FDE4706C99338007FD84EB265F2EB49404CA19B84F2C4F90BCA1CB8F170DED0C4F83649B9155A2DF2E35143E1807A19623F3E7E77E5E6FB1BECB8C169E397F20B3941CCF3AD55F27F42F8A1837A96BC4A1FFA7DD371F0696146394BFB4EE656ED00809541945DD7B66E477C62544A8B63C0AC3F759CEC53C006059A8911C5D4EF538CF527267003A7359D1A749D54A7CA8BCCBF6917364113D1016290963521B5D0DC3AB037A28BD50A39AD41D51AB782DDDEA2D9519B792D261F7D392A84C393C8F2C8CA160DC18D93DEFB149E235A67609FA83D4DE3D9181B88563D1A36FED2760DE1F346276EC91F06B6D156A97A6C3B4386C78E2BC76052DFE37EE750C23F3B2188EA642BB396E55ABA74D0E9E30A3DC24D646EE5F953329357A4DAB65416F1FCC180AD404438DCAD39390317B4A0A1B6DF337E0D6CBE5B10E67E6F4D32FAC11DF5DEE856394C44CFAD07E05BDCABCC0E9779639B7396887F0989750B6738B506D66EEEEA084FCDE1FD27C95B0BE133227169F87215B73FFB6E2C50BC8F5B93D6C2CDF16E6E31E18066BC391F478612F6D7341D895F4D3C72CBFC7E62C5C09E0580C3EF113506CDD9A6780301434A8C4D753EF17C08F36D9DC2F6BF1827BC4D339341C9C8A3529902732ECA0F7DFC3230CCDFEA63E35B8A6A33BC1083629EF355E7FC3B34F205A28469C8CEF9A5F270D9529B10D4E46DB0590163F74C5433EF741ACE488783CED4FF4CD4B84D12B64CBC0B79ED45F46F0293C8655612ED4B406C96A0A48F32CD150B34B48BE1F6306188D1C9F1301A8A6FCF6C2412956C8A6DE574B9E5FA6A95C3F43F0A756C3D9BA3F17BEA24FAAFDF908AEE068E54DE1AED06ABADFB1688A5FD85500C2A0EF38B46D84C1AF6B92C6817F9B99669A7920C36984900956EFB90A82B3F8E7CDDB04F5C96A50519DF6A06D4E9373CDC513791B8DD1C1F1BC4BB87ABEBD369293FD371B1CF104783BDA40F5489FA1EFFF003843D92FAE6B6FF0A14DE72EC7174BEEE2D0ACD4A6F0A6EBEAB321E8D1B1A79929E88BCD3886D355A17A0D4F735907D7C6796F4C2D3F9D0C11515C017985C9E2D676342B5EEE766F17A78F0272CC08450D354BCEAC835035CA459C25B8E25A819481920F1BDAD5F84D9546FF785C7DD63C0B1CEA13ED9122B00272269D6BEE86AC0741768847D758C846CECC1DCD3F4AAAB69EE23D558A69EE7746BB6494C94302B2FD757EEE719682FD371A070EFFD37E0ECC0AF7DD2976C821DFF79F97A9B93EC0186D1D38A14DD4DE3C562D99392756DB97E666E25CD3872B0A415DE551AE34A6312D07C2718D800F0513AB47B4C693286F6519FAFE367C4E2C76497FB391937D71468CEB0CBEE6C40C53B9AF685A724684803ECCAFBD2D7FE0D9A9258F2D67453F10DB5D0F001E37E3883969C4D01ECA9829BFE8C1B7921D39BFCD1E02DDCDA124E0EC83C7AE30CB8E66D9E58573C8E76FF5F96E22ACCC0D27BA364C8AA6A01437B33D383222A430AF2E4A6FD706CE0F456EBDEACD301BBDD2724F9061D7C90E27060DBC323C91F8AA6C72A24DBBE0651BB542A1648F22322F281D32B490F3B5FFDB1471D5DCC210397727A42123587207AE651643FB175D1C27A12F1CBC69AB6046403AF151974ED23D0DD02CDEE6002564E8BA7647AE4CF558371F45279A18E324AB948BFB58155F8E4A06D47AF3A9DD8A0F82493CD6E6B2358E92EE8532740C2EF72055969FE183556A690AA504EE5B59CF7304A39311F865BA3DFFA54DF513ABB42D7C008980EEC4A2EF8251DC7BAA89574816343AD594C0EAF0785DC561421C27EE9055710213B59770953EC2A7505BBB3046F432F6249B80B9C42BC0048050170E76D2DF8E316D6AE683CD07D7448E213D82C5A72FE7C22976E397CB39040962443933149EFFCF1897F06D46E1730241BD58EC7B28C4DFBB7DAC1B59B63653ED21279648B22E6CB454395C6DEB9FF2AE0088A4A1D2AD141B5014B932FC5EBAC5B1C5A25C915F4E26656DD8A36663C5D26220640F3FC4F5EE3A1225253D4E5526B66BC38B0CC9669D8D3BCED9759D337AD5D75F9D1AD8EADCFEE7E92E6E8AA3D24B16C02DD2700B38840C28F6B60CC76D680679E8BCA32F3D0631A72C452F9890E40089C02D1221F5965587898B8CC093A34EC830D1B8F8B6134758400CB1EECA4A9775F0CE7FC35C33F6CFC5C1F967064D10091F95B70BEF74C9E4F13E58698625B61A78970B4BA76B3AA449A3561BFFF651501BC4EB570C564ABA2727481B49CCA806345EE64DCCAA637D5D0A9E6A4B58ADA2147F73C29F1AF814C5F42072830A4C2FC0CEE7FA42E7C6D3315DBF1E69689725B3FDF9CFC6EED2C10A2AABF5FB22F29266A3F12AE3EE355D9420D4C6E96D90D477BE09B3C0A8819C861A09BC48B07A66DA54E12F904D49B1BFE860AFB30DD26EE9D5119608D44B6A34282399B6D40EBDA7A873A6519B91088F7D2C833C7B4A96732F89900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cleartomark%RBIEndFontSubset
/CMR10 cguidfix
/F3.1/CMR10 renmfont
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
 exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs2 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
1 sc
q
0 0 436 382 rc
0 382 m
436 382 l
436 0 l
0 0 l
h
f
/Cs2 SC
1 1 1 sc
-1353 1330 m
2706 1330 l
2706 -1514 l
-1353 -1514 l
h
-1353 1330 m
f
3 w
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 -400 687 cm
430.8985 595.99609 m
796.07202 594 l
S
4 w
0.89803898 0.49019599 0.17254899 sc
431 652 m
796.17358 649.79803 l
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 359.1228 76 cm
/F1.1[ 20 0 0 -20 0 0]sf
-30.014648 7 m
(!"#$$%)[ 10.000000 10.000000 6.660156 11.123047 11.123047 0.000000 ] xS
1 0 0 -1 37.050755 17 cm
-5.5615234 7 m
(&)s
1 0 0 -1 398.05075 17 cm
-7.2216797 7 m
(')s
0.60000002 i
/Cs2 SC
0.89803898 0.49019599 0.17254899 sc
1 0 0 -1 -400 687 cm
618.02838 429.39316 m
660.7597 388.93964 l
S
549.64001 408.38187 m
613.14655 429.71194 l
S
3 w
0 0 0 sc
591.03632 339 m
496 498.28467 l
646.14862 528 l
636.08984 489.76562 l
591.08258 339.32364 l
S
591.08258 339.32364 m
708.39038 422.85666 l
646.14862 528 l
S
5 w
0.40000001 0.40000001 0.40000001 sc
646.14862 528 m
591.08258 339.32364 l
S
3 w
[
12
12
] 0 d
0.64705884 0.64705884 0.64705884 sc
433.11655 648.16089 m
610.50195 432.9209 l
S
0 i
CM
213.57616 253.13963 m
211.26727 252.91702 209.21509 254.60829 208.99246 256.91718 c
208.76987 259.22604 210.46114 261.27826 212.77002 261.50085 c
215.0789 261.72348 217.13109 260.0322 217.3537 257.7233 c
217.57631 255.41443 215.88504 253.36224 213.57616 253.13963 c
f
0 J
0 j
[] 0 d
1 0 0 -1 -400 687 cm
613.57617 433.86038 m
611.26727 434.08298 609.21509 432.39172 608.99249 430.08282 c
608.76984 427.77396 610.46112 425.72174 612.77002 425.49915 c
615.07892 425.27652 617.1311 426.9678 617.3537 429.2767 c
617.57629 431.58557 615.88501 433.63776 613.57617 433.86038 c
S
CM
30.042343 39.778542 m
32.351231 40.001148 34.403416 38.309883 34.626026 36.000996 c
34.848637 33.692112 33.157368 31.639923 30.848484 31.417315 c
28.539595 31.194704 26.48741 32.885967 26.264801 35.194859 c
26.042192 37.503742 27.733459 39.555931 30.042343 39.778542 c
f
1 0 0 -1 -400 687 cm
430.04236 647.22144 m
432.35123 646.99884 434.40341 648.69012 434.62604 650.99902 c
434.84863 653.30786 433.15738 655.36011 430.84848 655.5827 c
428.53958 655.8053 426.4874 654.11401 426.2648 651.80511 c
426.04221 649.49628 427.73346 647.44409 430.04236 647.22144 c
S
1 J
1 j
[
12
12
] 0 d
0.60000002 i
433.93304 647.17017 m
632.55707 420.52747 l
S
0 i
CM
235.60133 265.44028 m
233.28676 265.28781 231.2868 267.0405 231.13431 269.35507 c
230.98181 271.66965 232.73453 273.66962 235.0491 273.82211 c
237.36368 273.97461 239.36363 272.22189 239.51613 269.90732 c
239.66862 267.59274 237.91591 265.59277 235.60133 265.44028 c
f
0 J
0 j
[] 0 d
1 0 0 -1 -400 687 cm
635.60132 421.55972 m
633.28674 421.71219 631.2868 419.9595 631.13428 417.64493 c
630.98181 415.33035 632.7345 413.33038 635.04907 413.17789 c
637.36365 413.02539 639.36365 414.77811 639.51611 417.09268 c
639.66864 419.40726 637.91589 421.40723 635.60132 421.55972 c
S
1 J
1 j
[
12
12
] 0 d
0.60000002 i
439.23706 641.11798 m
593.20551 428.69937 l
S
0 i
CM
196.33208 257.55371 m
194.04144 257.18829 191.88829 258.74896 191.52286 261.03961 c
191.15742 263.33023 192.71812 265.4834 195.00874 265.84882 c
197.29938 266.21423 199.45253 264.65356 199.81796 262.36292 c
200.18338 260.0723 198.6227 257.91913 196.33208 257.55371 c
f
0 J
0 j
[] 0 d
1 0 0 -1 -400 687 cm
596.33209 429.44629 m
594.04144 429.81171 591.88831 428.25104 591.52283 425.96039 c
591.15741 423.66977 592.71814 421.5166 595.00873 421.15118 c
597.29938 420.78577 599.45251 422.34644 599.81793 424.63708 c
600.18341 426.9277 598.62268 429.08087 596.33209 429.44629 c
S
/Cs1 SC
0 sc
1 0 0 -1 188.05075 365 cm
-6.6699219 7 m
(\()s
1 0 0 -1 83.050758 202 cm
-6.6699219 7 m
(\))s
1 0 0 -1 251.05075 142 cm
-7.2216797 7 m
(*)s
1 0 0 -1 327.05075 267 cm
-7.2216797 7 m
(+)s
1 0 0 -1 203.05075 276 cm
-5 7 m
(,)s
1 0 0 -1 270.05075 266.5 cm
-25.839844 7.5 m
(,-)[ 10.000000 0.000000 ] xS
Q
/Cs2 SC
0 0 0 sc
q
266.05075 278.47675 m
285.5275 278.47675 l
285.5275 259 l
266.05075 259 l
h
266.05075 278.47675 m
W
266.05075 259 19.47674 19.47674 rc
2.596899 0 0 2.596899 -517.81757 -1390.3149 cm
/F2.1[ 9.9625998 0 0 9.9625998 0 0]sf
301.47299 635.31812 m
(!)s
Q
q
266.05075 278.47675 m
285.5275 278.47675 l
285.5275 259 l
266.05075 259 l
h
266.05075 278.47675 m
W
266.05075 259 19.47674 19.47674 rc
2.596899 0 0 2.596899 -517.81757 -1390.3149 cm
/F2.1[ 9.9625998 0 0 9.9625998 0 0]sf
301.47299 635.31812 m
(!)s
Q
/Cs1 SC
0 sc
q
0 0 436 382 rc
1 0 0 -1 270.05075 266.5 cm
/F1.1[ 20 0 0 -20 0 0]sf
15.839844 7.5 m
(,)s
1 0 0 -1 166.05075 257.5 cm
-23.330078 7.5 m
(,.)[ 10.000000 0.000000 ] xS
Q
/Cs2 SC
0 0 0 sc
q
159.55075 269.47675 m
179.0275 269.47675 l
179.0275 250 l
159.55075 250 l
h
159.55075 269.47675 m
W
159.55075 250 19.47674 19.47674 rc
2.596899 0 0 2.596899 -624.31757 -1399.3149 cm
/F3.1[ 9.9625998 0 0 9.9625998 0 0]sf
301.47299 635.31812 m
(!)s
Q
q
159.55075 269.47675 m
179.0275 269.47675 l
179.0275 250 l
159.55075 250 l
h
159.55075 269.47675 m
W
159.55075 250 19.47674 19.47674 rc
2.596899 0 0 2.596899 -624.31757 -1399.3149 cm
/F3.1[ 9.9625998 0 0 9.9625998 0 0]sf
301.47299 635.31812 m
(!)s
Q
/Cs1 SC
0 sc
q
0 0 436 382 rc
1 0 0 -1 166.05075 257.5 cm
/F1.1[ 20 0 0 -20 0 0]sf
13.330078 7.5 m
(,)s
ep
end
%%Trailer
%%EOF
